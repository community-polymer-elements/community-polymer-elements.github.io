{"elements":[{"type":"element","desc":"\n`<paper-item>` is a non-interactive list item. By default, it is a horizontal flexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled two-line and three-line\nitems.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item`            | Mixin applied to the item  | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be more appropriate to set\n`role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or `role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-item","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-item.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-item"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]},{"type":"element","desc":"\n`<paper-icon-item>` is a convenience element to make an item with icon. It is a non interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the attribute `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" item-icon></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" item-icon></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area     | `56px`\n`--paper-icon-item`       | Mixin applied to the item  | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-icon-item","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-icon-item.html","demos":[]},{"type":"element","desc":"\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height`   | Minimum height of a two-line item          | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item        | `88px`\n`--paper-item-body-secondary-color`       | Foreground color for the `secondary` area  | `--secondary-text-color`\n`--paper-item-body-secondary`             | Mixin applied to the `secondary` area      | `{}`\n\n","events":[],"properties":[],"behaviors":[],"observers":[],"is":"paper-item-body","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-item-body.html","demos":[]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-item":{"type":"element","desc":"\n`<paper-item>` is a non-interactive list item. By default, it is a horizontal flexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled two-line and three-line\nitems.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item`            | Mixin applied to the item  | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be more appropriate to set\n`role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or `role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-item","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-item.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-item"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]},"paper-icon-item":{"type":"element","desc":"\n`<paper-icon-item>` is a convenience element to make an item with icon. It is a non interactive list\nitem with a fixed-width icon area, according to Material Design. This is useful if the icons are of\nvarying widths, but you want the item bodies to line up. Use this like a `<paper-item>`. The child\nnode with the attribute `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" item-icon></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" item-icon></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area     | `56px`\n`--paper-icon-item`       | Mixin applied to the item  | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-icon-item","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-icon-item.html","demos":[]},"paper-item-body":{"type":"element","desc":"\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two- or\nthree- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text styling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height`   | Minimum height of a two-line item          | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item        | `88px`\n`--paper-item-body-secondary-color`       | Foreground color for the `secondary` area  | `--secondary-text-color`\n`--paper-item-body-secondary`             | Mixin applied to the `secondary` area      | `{}`\n\n","events":[],"properties":[],"behaviors":[],"observers":[],"is":"paper-item-body","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-item/paper-item-body.html","demos":[]}}}