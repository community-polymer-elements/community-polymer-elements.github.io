{"elements":[{"type":"element","desc":"\nMaterial design: [Surface reaction](https://www.google.com/design/spec/animation/responsive-interaction.html#responsive-interaction-surface-reaction)\n\n`paper-ripple` provides a visual effect that other paper elements can\nuse to simulate a rippling effect emanating from the point of contact.  The\neffect can be visualized as a concentric circle with motion.\n\nExample:\n\n    <div style=\"position:relative\">\n      <paper-ripple></paper-ripple>\n    </div>\n\nNote, it's important that the parent container of the ripple be relative position, otherwise\nthe ripple will emanate outside of the desired container. \n\n`paper-ripple` listens to \"mousedown\" and \"mouseup\" events so it would display ripple\neffect when touches on it.  You can also defeat the default behavior and\nmanually route the down and up actions to the ripple element.  Note that it is\nimportant if you call `downAction()` you will have to make sure to call\n`upAction()` so that `paper-ripple` would end the animation loop.\n\nExample:\n\n    <paper-ripple id=\"ripple\" style=\"pointer-events: none;\"></paper-ripple>\n    ...\n    downAction: function(e) {\n      this.$.ripple.downAction({x: e.x, y: e.y});\n    },\n    upAction: function(e) {\n      this.$.ripple.upAction();\n    }\n\nStyling ripple effect:\n\n  Use CSS color property to style the ripple:\n\n    paper-ripple {\n      color: #4285f4;\n    }\n\n  Note that CSS color property is inherited so it is not required to set it on\n  the `paper-ripple` element directly.\n\nBy default, the ripple is centered on the point of contact.  Apply the `recenters`\nattribute to have the ripple grow toward the center of its container.\n\n    <paper-ripple recenters></paper-ripple>\n\nYou can also  center the ripple inside its container from the start.\n\n    <paper-ripple center></paper-ripple>\n\nApply `circle` class to make the rippling effect within a circle.\n\n    <paper-ripple class=\"circle\"></paper-ripple>\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"addRipple","type":"Function","params":[],"function":true},{"name":"animate","type":"Function","params":[],"function":true},{"name":"animating","type":"Boolean","desc":"\nTrue when there are visible ripples animating within the\nelement.\n         ","published":true,"readOnly":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"center","type":"Boolean","desc":"\nIf true, ripples will center inside its container\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"recenters"}]}},{"name":"downAction","type":"Function","desc":"\nProvokes a ripple down effect via a UI event, \n*not* respecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"holdDown","type":"Boolean","desc":"\nIf true, the ripple will remain in the \"down\" state until `holdDown`\nis set to false again.\n         ","published":true,"default":false,"observer":"_holdDownChanged","observerNode":{"type":"Literal","value":"_holdDownChanged","raw":"'_holdDownChanged'","range":[10120,10138],"loc":{"start":{"line":377,"column":20},"end":{"line":377,"column":38}}}},{"name":"initialOpacity","type":"Number","desc":"\nThe initial opacity set on the wave.\n\n","published":true,"default":0.25,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"initialOpacity"}]}},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"noink","type":"Boolean","desc":"\nIf true, the ripple will not generate a ripple effect \nvia pointer interaction.\nCalling ripple's imperative api like `simulatedRipple` will \nstill generate the ripple effect.\n         ","published":true,"default":false},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"observers","type":"Array"},{"name":"onAnimationComplete","type":"Function","params":[],"function":true},{"name":"opacityDecayVelocity","type":"Number","desc":"\nHow fast (opacity per second) the wave fades out.\n\n","published":true,"default":0.8,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"opacityDecayVelocity"}]}},{"name":"recenters","type":"Boolean","desc":"\nIf true, ripples will exhibit a gravitational pull towards\nthe center of their container as they fade away.\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"recenters"}]}},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"removeRipple","type":"Function","params":[{"name":"ripple"}],"function":true},{"name":"ripples","type":"Array","desc":"\nA list of the visual ripples.\n\n","published":true,"default":"[]","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"ripples"}]}},{"name":"shouldKeepAnimating","type":"Function","params":[],"function":true},{"name":"simulatedRipple","type":"Function","params":[],"function":true},{"name":"target","type":"Function","params":[],"function":true},{"name":"uiDownAction","type":"Function","desc":"\nProvokes a ripple down effect via a UI event, \nrespecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"uiUpAction","type":"Function","desc":"\nProvokes a ripple up effect via a UI event, \nrespecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"upAction","type":"Function","desc":"\nProvokes a ripple up effect via a UI event, \n*not* respecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"name":"_animating","type":"Boolean","published":true,"private":true},{"name":"_boundAnimate","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"name":"_holdDownChanged","type":"Function","desc":" effect.","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_noinkChanged","type":"Function","params":[{"name":"noink"},{"name":"attached"}],"private":true,"function":true},{"name":"_onEnterKeydown","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onSpaceKeydown","type":"Function","params":[],"private":true,"function":true},{"name":"_onSpaceKeyup","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronA11yKeysBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_noinkChanged(noink, isAttached)","raw":"'_noinkChanged(noink, isAttached)'","range":[10713,10747],"loc":{"start":{"line":404,"column":8},"end":{"line":404,"column":42}}},"expression":"_noinkChanged(noink, isAttached)"}],"is":"paper-ripple","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-ripple/paper-ripple.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-ripple"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"paper-ripple":{"type":"element","desc":"\nMaterial design: [Surface reaction](https://www.google.com/design/spec/animation/responsive-interaction.html#responsive-interaction-surface-reaction)\n\n`paper-ripple` provides a visual effect that other paper elements can\nuse to simulate a rippling effect emanating from the point of contact.  The\neffect can be visualized as a concentric circle with motion.\n\nExample:\n\n    <div style=\"position:relative\">\n      <paper-ripple></paper-ripple>\n    </div>\n\nNote, it's important that the parent container of the ripple be relative position, otherwise\nthe ripple will emanate outside of the desired container. \n\n`paper-ripple` listens to \"mousedown\" and \"mouseup\" events so it would display ripple\neffect when touches on it.  You can also defeat the default behavior and\nmanually route the down and up actions to the ripple element.  Note that it is\nimportant if you call `downAction()` you will have to make sure to call\n`upAction()` so that `paper-ripple` would end the animation loop.\n\nExample:\n\n    <paper-ripple id=\"ripple\" style=\"pointer-events: none;\"></paper-ripple>\n    ...\n    downAction: function(e) {\n      this.$.ripple.downAction({x: e.x, y: e.y});\n    },\n    upAction: function(e) {\n      this.$.ripple.upAction();\n    }\n\nStyling ripple effect:\n\n  Use CSS color property to style the ripple:\n\n    paper-ripple {\n      color: #4285f4;\n    }\n\n  Note that CSS color property is inherited so it is not required to set it on\n  the `paper-ripple` element directly.\n\nBy default, the ripple is centered on the point of contact.  Apply the `recenters`\nattribute to have the ripple grow toward the center of its container.\n\n    <paper-ripple recenters></paper-ripple>\n\nYou can also  center the ripple inside its container from the start.\n\n    <paper-ripple center></paper-ripple>\n\nApply `circle` class to make the rippling effect within a circle.\n\n    <paper-ripple class=\"circle\"></paper-ripple>\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"addRipple","type":"Function","params":[],"function":true},{"name":"animate","type":"Function","params":[],"function":true},{"name":"animating","type":"Boolean","desc":"\nTrue when there are visible ripples animating within the\nelement.\n         ","published":true,"readOnly":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"center","type":"Boolean","desc":"\nIf true, ripples will center inside its container\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"recenters"}]}},{"name":"downAction","type":"Function","desc":"\nProvokes a ripple down effect via a UI event, \n*not* respecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"holdDown","type":"Boolean","desc":"\nIf true, the ripple will remain in the \"down\" state until `holdDown`\nis set to false again.\n         ","published":true,"default":false,"observer":"_holdDownChanged","observerNode":{"type":"Literal","value":"_holdDownChanged","raw":"'_holdDownChanged'","range":[10120,10138],"loc":{"start":{"line":377,"column":20},"end":{"line":377,"column":38}}}},{"name":"initialOpacity","type":"Number","desc":"\nThe initial opacity set on the wave.\n\n","published":true,"default":0.25,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"initialOpacity"}]}},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"noink","type":"Boolean","desc":"\nIf true, the ripple will not generate a ripple effect \nvia pointer interaction.\nCalling ripple's imperative api like `simulatedRipple` will \nstill generate the ripple effect.\n         ","published":true,"default":false},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"observers","type":"Array"},{"name":"onAnimationComplete","type":"Function","params":[],"function":true},{"name":"opacityDecayVelocity","type":"Number","desc":"\nHow fast (opacity per second) the wave fades out.\n\n","published":true,"default":0.8,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"opacityDecayVelocity"}]}},{"name":"recenters","type":"Boolean","desc":"\nIf true, ripples will exhibit a gravitational pull towards\nthe center of their container as they fade away.\n\n","published":true,"default":false,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"recenters"}]}},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"removeRipple","type":"Function","params":[{"name":"ripple"}],"function":true},{"name":"ripples","type":"Array","desc":"\nA list of the visual ripples.\n\n","published":true,"default":"[]","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"ripples"}]}},{"name":"shouldKeepAnimating","type":"Function","params":[],"function":true},{"name":"simulatedRipple","type":"Function","params":[],"function":true},{"name":"target","type":"Function","params":[],"function":true},{"name":"uiDownAction","type":"Function","desc":"\nProvokes a ripple down effect via a UI event, \nrespecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"uiUpAction","type":"Function","desc":"\nProvokes a ripple up effect via a UI event, \nrespecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"name":"upAction","type":"Function","desc":"\nProvokes a ripple up effect via a UI event, \n*not* respecting the `noink` property.\n","params":[{"name":"event","type":"Event=","desc":null}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"name":"_animating","type":"Boolean","published":true,"private":true},{"name":"_boundAnimate","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"name":"_holdDownChanged","type":"Function","desc":" effect.","params":[{"name":"newVal"},{"name":"oldVal"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_noinkChanged","type":"Function","params":[{"name":"noink"},{"name":"attached"}],"private":true,"function":true},{"name":"_onEnterKeydown","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onSpaceKeydown","type":"Function","params":[],"private":true,"function":true},{"name":"_onSpaceKeyup","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronA11yKeysBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_noinkChanged(noink, isAttached)","raw":"'_noinkChanged(noink, isAttached)'","range":[10713,10747],"loc":{"start":{"line":404,"column":8},"end":{"line":404,"column":42}}},"expression":"_noinkChanged(noink, isAttached)"}],"is":"paper-ripple","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-ripple/paper-ripple.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-ripple"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}