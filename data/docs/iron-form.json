{"elements":[{"type":"element","desc":"\n``<iron-form>` is an HTML `<form>` element that can validate and submit any custom\nelements that implement `Polymer.IronFormElementBehavior`, as well as any\nnative HTML elements.\n\nIt supports both `get` and `post` methods, and uses an `iron-ajax` element to\nsubmit the form data to the action URL.\n\n  Example:\n\n    <form is=\"iron-form\" id=\"form\" method=\"post\" action=\"/form/handler\">\n      <paper-input name=\"name\" label=\"name\"></paper-input>\n      <input name=\"address\">\n      ...\n    </form>\n\nBy default, a native `<button>` element will submit this form. However, if you\nwant to submit it from a custom element's click handler, you need to explicitly\ncall the form's `submit` method.\n\n  Example:\n\n    <paper-button raised onclick=\"submitForm()\">Submit</paper-button>\n\n    function submitForm() {\n      document.getElementById('form').submit();\n    }\n\n","events":[{"desc":"\nFired after the form is submitted and an error is received.\n\n","jsdoc":{"description":"\nFired after the form is submitted and an error is received.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-error"}],"orig":"*\n     * Fired after the form is submitted and an error is received.\n     *\n     * @event iron-form-error\n     "},"name":"iron-form-error","params":[]},{"desc":"\nFired if the form cannot be submitted because it's invalid.\n\n","jsdoc":{"description":"\nFired if the form cannot be submitted because it's invalid.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-invalid"}],"orig":"*\n     * Fired if the form cannot be submitted because it's invalid.\n     *\n     * @event iron-form-invalid\n     "},"name":"iron-form-invalid","params":[]},{"desc":"\nFired after the form is submitted and a response is received.\n\n","jsdoc":{"description":"\nFired after the form is submitted and a response is received.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-response"}],"orig":"*\n    * Fired after the form is submitted and a response is received.\n    *\n    * @event iron-form-response\n    "},"name":"iron-form-response","params":[]},{"desc":"\nFired after the form is submitted.\n\n","jsdoc":{"description":"\nFired after the form is submitted.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-submit"}],"orig":"*\n     * Fired after the form is submitted.\n     *\n     * @event iron-form-submit\n     "},"name":"iron-form-submit","params":[]}],"properties":[{"name":"contentType","type":"String","desc":"\nContent type to use when sending data.\n       ","published":true,"default":"application/x-www-form-urlencoded"},{"name":"disableNativeValidationUi","type":"Boolean","desc":"\nBy default, the form will display the browser's native validation\nUI (i.e. popup bubbles and invalid styles on invalid fields). You can\nmanually disable this; however, if you do, note that you will have to\nmanually style invalid *native* HTML fields yourself, as you are\nexplicitly preventing the native form from doing so.\n       ","published":true,"default":false},{"name":"serialize","type":"Function","desc":"\nReturns a json object containing name/value pairs for all the registered\ncustom components and native elements of the form. If there are elements\nwith duplicate names, then their values will get aggregated into an\narray of values.\n\n","params":[],"function":true,"return":{"type":"!Object","desc":null}},{"name":"submit","type":"Function","desc":"\nCalled to submit the form.\n     ","params":[],"function":true},{"name":"validate","type":"Function","desc":"\nValidates all the required elements (custom and native) in the form.\n","params":[],"function":true,"return":{"type":"boolean","desc":"True if all the elements are valid."}},{"name":"withCredentials","type":"Boolean","desc":"\nSet the withCredentials flag when sending data.\n      ","published":true,"default":false},{"name":"_doFakeSubmitForValidation","type":"Function","params":[],"private":true,"function":true},{"name":"_handleFormError","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_handleFormResponse","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_onSubmit","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_registerElement","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"name":"_unregisterElement","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"name":"_useValue","type":"Function","params":[{"name":"el"}],"private":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true},{"name":"listeners","type":"Object","desc":"\nFired after the form is submitted and an error is received.\n\n","jsdoc":{"tags":[{"tag":"event","type":null,"description":"iron-form-error"}]},"private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"iron-form","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/iron-form/iron-form.html","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"iron-form":{"type":"element","desc":"\n``<iron-form>` is an HTML `<form>` element that can validate and submit any custom\nelements that implement `Polymer.IronFormElementBehavior`, as well as any\nnative HTML elements.\n\nIt supports both `get` and `post` methods, and uses an `iron-ajax` element to\nsubmit the form data to the action URL.\n\n  Example:\n\n    <form is=\"iron-form\" id=\"form\" method=\"post\" action=\"/form/handler\">\n      <paper-input name=\"name\" label=\"name\"></paper-input>\n      <input name=\"address\">\n      ...\n    </form>\n\nBy default, a native `<button>` element will submit this form. However, if you\nwant to submit it from a custom element's click handler, you need to explicitly\ncall the form's `submit` method.\n\n  Example:\n\n    <paper-button raised onclick=\"submitForm()\">Submit</paper-button>\n\n    function submitForm() {\n      document.getElementById('form').submit();\n    }\n\n","events":[{"desc":"\nFired after the form is submitted and an error is received.\n\n","jsdoc":{"description":"\nFired after the form is submitted and an error is received.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-error"}],"orig":"*\n     * Fired after the form is submitted and an error is received.\n     *\n     * @event iron-form-error\n     "},"name":"iron-form-error","params":[]},{"desc":"\nFired if the form cannot be submitted because it's invalid.\n\n","jsdoc":{"description":"\nFired if the form cannot be submitted because it's invalid.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-invalid"}],"orig":"*\n     * Fired if the form cannot be submitted because it's invalid.\n     *\n     * @event iron-form-invalid\n     "},"name":"iron-form-invalid","params":[]},{"desc":"\nFired after the form is submitted and a response is received.\n\n","jsdoc":{"description":"\nFired after the form is submitted and a response is received.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-response"}],"orig":"*\n    * Fired after the form is submitted and a response is received.\n    *\n    * @event iron-form-response\n    "},"name":"iron-form-response","params":[]},{"desc":"\nFired after the form is submitted.\n\n","jsdoc":{"description":"\nFired after the form is submitted.\n\n","tags":[{"tag":"event","type":null,"description":"iron-form-submit"}],"orig":"*\n     * Fired after the form is submitted.\n     *\n     * @event iron-form-submit\n     "},"name":"iron-form-submit","params":[]}],"properties":[{"name":"contentType","type":"String","desc":"\nContent type to use when sending data.\n       ","published":true,"default":"application/x-www-form-urlencoded"},{"name":"disableNativeValidationUi","type":"Boolean","desc":"\nBy default, the form will display the browser's native validation\nUI (i.e. popup bubbles and invalid styles on invalid fields). You can\nmanually disable this; however, if you do, note that you will have to\nmanually style invalid *native* HTML fields yourself, as you are\nexplicitly preventing the native form from doing so.\n       ","published":true,"default":false},{"name":"serialize","type":"Function","desc":"\nReturns a json object containing name/value pairs for all the registered\ncustom components and native elements of the form. If there are elements\nwith duplicate names, then their values will get aggregated into an\narray of values.\n\n","params":[],"function":true,"return":{"type":"!Object","desc":null}},{"name":"submit","type":"Function","desc":"\nCalled to submit the form.\n     ","params":[],"function":true},{"name":"validate","type":"Function","desc":"\nValidates all the required elements (custom and native) in the form.\n","params":[],"function":true,"return":{"type":"boolean","desc":"True if all the elements are valid."}},{"name":"withCredentials","type":"Boolean","desc":"\nSet the withCredentials flag when sending data.\n      ","published":true,"default":false},{"name":"_doFakeSubmitForValidation","type":"Function","params":[],"private":true,"function":true},{"name":"_handleFormError","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_handleFormResponse","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_onSubmit","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_registerElement","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"name":"_unregisterElement","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"name":"_useValue","type":"Function","params":[{"name":"el"}],"private":true,"function":true},{"name":"extends","type":"string","private":true,"configuration":true},{"name":"listeners","type":"Object","desc":"\nFired after the form is submitted and an error is received.\n\n","jsdoc":{"tags":[{"tag":"event","type":null,"description":"iron-form-error"}]},"private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":[],"observers":[],"is":"iron-form","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/iron-form/iron-form.html","jsdoc":{"tags":[{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}