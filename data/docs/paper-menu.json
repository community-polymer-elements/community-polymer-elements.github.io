{"elements":[{"type":"element","desc":"\n`<paper-menu>` implements an accessible menu control with Material Design styling. The focused item\nis highlighted, and the selected item has bolded text.\n\n    <paper-menu>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-menu selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\nMake a multi-select menu with the `multi` attribute. Items in a multi-select menu can be deselected,\nand multiple item can be selected.\n\n    <paper-menu multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-menu-background-color`   | Menu background color                                            | `--primary-background-color`\n`--paper-menu-color`               | Menu foreground color                                            | `--primary-text-color`\n`--paper-menu-disabled-color`     | Foreground color for a disabled item                             | `--disabled-text-color`\n`--paper-menu`                    | Mixin applied to the menu                                        | `{}`\n`--paper-menu-selected-item`      | Mixin applied to the selected item                               | `{}`\n`--paper-menu-focused-item`       | Mixin applied to the focused item                                | `{}`\n`--paper-menu-focused-item-after` | Mixin applied to the ::after pseudo-element for the focused item | `{}`\n\n### Accessibility\n\n`<paper-menu>` has `role=\"menu\"` by default. A multi-select menu will also have\n`aria-multiselectable` set. It implements key bindings to navigate through the menu with the up and\ndown arrow keys, esc to exit the menu, and enter to activate a menu item. Typing the first letter\nof a menu item will also focus it.\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"activateEvent","type":"String","desc":"\nThe event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.\n       ","published":true,"default":"tap","observer":"_activateEventChanged","observerNode":{"type":"Literal","value":"_activateEventChanged","raw":"'_activateEventChanged'","range":[1684,1707],"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":41}}}},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"attrForItemTitle","type":"String","desc":"\nThe attribute to use on menu items to look up the item title. Typing the first\nletter of an item when the menu is open focuses that item. If unset, `textContent`\nwill be used.\n       ","published":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"attrForSelected","type":"String","desc":"\nIf you want to use the attribute value of an element for `selected` instead of the index,\nset this to the name of the attribute.\n       ","published":true,"default":null},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"focusedItem","type":"?Object","desc":"\nReturns the currently focused item.\n","published":true,"observer":"_focusedItemChanged","observerNode":{"type":"Literal","value":"_focusedItemChanged","raw":"'_focusedItemChanged'","range":[346,367],"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":39}}},"readOnly":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"indexOf","type":"Function","desc":"\nReturns the index of the given item.\n\n","params":[{"name":"item","type":"Object","desc":null}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"indexOf","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"items","type":"Function","desc":"\nReturns an array of selectable items.\n\n","params":[],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"multi","type":"Boolean","desc":"\nIf true, multiple selections are allowed.\n       ","published":true,"default":false,"observer":"multiChanged","observerNode":{"type":"Literal","value":"multiChanged","raw":"'multiChanged'","range":[277,291],"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":32}}}},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"multiChanged","type":"Function","params":[{"name":"multi"}],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"select","type":"Function","desc":"\nSelects the given value. If the `multi` property is true, then the selected state of the\n`value` will be toggled; otherwise the `value` will be selected.\n\n","params":[{"name":"value","type":"string","desc":"the value to select."}],"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectable","type":"string","desc":"\nThis is a CSS selector string.  If this is set, only items that match the CSS selector\nare selectable.\n       ","published":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selected","type":"String","desc":"\nGets or sets the selected element. The default is to use the index of the item.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedAttribute","type":"String","desc":"\nThe attribute to set on elements when selected.\n       ","published":true,"default":null},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedClass","type":"String","desc":"\nThe class to set on elements when selected.\n       ","published":true,"default":"iron-selected"},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedItem","type":"Object","desc":"\nReturns the currently selected item.\n       ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"selectedItems","type":"Array","desc":"\nReturns an array of currently selected items.\n       ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"selectedValues","type":"Array","desc":"\nGets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectNext","type":"Function","desc":"\nSelects the next item.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectNext","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectPrevious","type":"Function","desc":"\nSelects the previous item.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectPrevious","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_activateEventChanged","type":"Function","params":[{"name":"eventName"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_activateHandler","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_addListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_applySelection","type":"Function","desc":"\nMutates items in the menu based on provided selection details, so that\nall items correctly reflect selection state.\n\n","params":[{"name":"item","type":"Element","desc":"An item in the menu."},{"name":"isSelected","type":"boolean","desc":"True if the item should be shown in a\nselected state, otherwise false."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_excludedLocalNames","type":"object","desc":"\nThe set of excluded elements where the key is the `localName`\nof the element that will be ignored from the item list.\n\n","published":true,"default":"{template: 1}","jsdoc":{"tags":[{"tag":"default","type":null,"description":"{template: 1}"}]},"private":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_filterItem","type":"Function","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusedItemChanged","type":"Function","desc":"\nDiscretely updates tabindex values among menu items as the focused item\nchanges.\n\n","params":[{"name":"focusedItem","type":"Element","desc":"The element that is currently focused."},{"name":"old","type":"?Element","desc":"The last element that was considered focused, if\napplicable."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusNext","type":"Function","desc":"\nFocuses the next item (relative to the currently focused item) in the\nmenu.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusPrevious","type":"Function","desc":"\nFocuses the previous item (relative to the currently focused item) in the\nmenu.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusWithKeyboardEvent","type":"Function","desc":"\nGiven a KeyboardEvent, this method will focus the appropriate item in the\nmenu (if there is a relevant item, and it is possible to focus it).\n\n","params":[{"name":"event","type":"KeyboardEvent","desc":"A KeyboardEvent."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_indexToValue","type":"Function","params":[{"name":"index"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_itemActivate","type":"Function","params":[{"name":"value"},{"name":"item"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_observeContent","type":"Function","desc":" observe content changes under the given node.","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_observeItems","type":"Function","desc":" observe items change under the given node.","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onDownKey","type":"Function","desc":"\nHandler that is called when the down key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onEscKey","type":"Function","desc":"\nHandler that is called when the esc key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onFocus","type":"Function","desc":"\nHandler that is called when the menu receives focus.\n\n","params":[{"name":"event","type":"FocusEvent","desc":"A focus event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onIronItemsChanged","type":"Function","desc":"\nA handler that responds to mutation changes related to the list of items\nin the menu.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An event containing mutation records as its\ndetail."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onKeydown","type":"Function","desc":"\nHandler that is called when a keydown event is detected.\n\n","params":[{"name":"event","type":"KeyboardEvent","desc":"A keyboard event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onShiftTabDown","type":"Function","desc":"\nHandler that is called when a shift+tab keypress is detected by the menu.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onUpKey","type":"Function","desc":"\nHandler that is called when the up key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_removeListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_resetTabindices","type":"Function","desc":"\nResets all tabindex attributes to the appropriate value based on the\ncurrent selection state. The appropriate value is `0` (focusable) for\nthe default selected item, and `-1` (not keyboard focusable) for all\nother items.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_selectionChange","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_selectMulti","type":"Function","params":[{"name":"values"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_selectSelected","type":"Function","params":[{"name":"selected"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_toggleSelected","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_updateMultiselectable","type":"Function","desc":"\nSets appropriate ARIA based on whether or not the menu is meant to be\nmulti-selectable.\n\n","params":[{"name":"multi","type":"boolean","desc":"True if the menu should be multi-selectable."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_updateSelected","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueForItem","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueToIndex","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueToItem","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronMenuBehavior"],"observers":[],"is":"paper-menu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-menu/paper-menu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-menu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"},{"type":"element","desc":"\n`<paper-submenu>` is a nested menu inside of a parent `<paper-menu>`. It\nconsists of a trigger that expands or collapses another `<paper-menu>`:\n\n    <paper-menu>\n      <paper-submenu>\n        <paper-item class=\"menu-trigger\">Topics</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Topic 1</paper-item>\n          <paper-item>Topic 2</paper-item>\n          <paper-item>Topic 3</paper-item>\n        </paper-menu>\n      </paper-submenu>\n      <paper-submenu>\n        <paper-item class=\"menu-trigger\">Faves</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Fave 1</paper-item>\n          <paper-item>Fave 2</paper-item>\n        </paper-menu>\n      </paper-submenu>\n      <paper-submenu disabled>\n        <paper-item class=\"menu-trigger\">Unavailable</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Disabled 1</paper-item>\n          <paper-item>Disabled 2</paper-item>\n        </paper-menu>\n      </paper-submenu>\n    </paper-menu>\n\nJust like in `<paper-menu>`, the focused item is highlighted, and the selected\nitem has bolded text. Please see the `<paper-menu>` docs for which attributes\n(such as `multi` and `selected`), and styling options are available for the\n`menu-content` menu.\n\n","events":[{"desc":"\nFired when the submenu is closed.\n\n","jsdoc":{"description":"\nFired when the submenu is closed.\n\n","tags":[{"tag":"event","type":null,"description":"paper-submenu-close"}],"orig":"*\n       * Fired when the submenu is closed.\n       *\n       * @event paper-submenu-close\n       "},"name":"paper-submenu-close","params":[]},{"desc":"\nFired when the submenu is opened.\n\n","jsdoc":{"description":"\nFired when the submenu is opened.\n\n","tags":[{"tag":"event","type":null,"description":"paper-submenu-open"}],"orig":"*\n       * Fired when the submenu is opened.\n       *\n       * @event paper-submenu-open\n       "},"name":"paper-submenu-open","params":[]}],"properties":[{"name":"close","type":"Function","desc":"\nCollapse the submenu content.\n     ","params":[],"function":true},{"name":"dettached","type":"Function","params":[],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"name":"open","type":"Function","desc":"\nExpand the submenu content.\n     ","params":[],"function":true},{"name":"opened","type":"Boolean","desc":"\nSet opened to true to show the collapse element and to false to hide it.\n\n","published":true,"default":false,"notify":true,"observer":"_openedChanged","observerNode":{"type":"Literal","value":"_openedChanged","raw":"'_openedChanged'","range":[530,546],"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":34}}},"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"opened"}]}},{"name":"__parent","type":"Function","params":[],"private":true,"function":true},{"name":"__trigger","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"name":"_disabledChanged","type":"Function","desc":"\nIf the dropdown is open when disabled becomes true, close the\ndropdown.\n\n","params":[{"name":"disabled","type":"boolean","desc":"True if disabled, otherwise false."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"name":"_onParentIronActivate","type":"Function","desc":"\nA handler that is called when `iron-activate` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-activate` event."}],"private":true,"function":true},{"name":"_onTap","type":"Function","desc":"\nA handler that is called when the trigger is tapped.\n     ","params":[],"private":true,"function":true},{"name":"_openedChanged","type":"Function","desc":"\nToggles the submenu content when the trigger is tapped.\n     ","params":[{"name":"opened"},{"name":"oldOpened"}],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState"],"observers":[],"is":"paper-submenu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-menu/paper-submenu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-submenu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"paper-menu":{"type":"element","desc":"\n`<paper-menu>` implements an accessible menu control with Material Design styling. The focused item\nis highlighted, and the selected item has bolded text.\n\n    <paper-menu>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\nAn initial selection can be specified with the `selected` attribute.\n\n    <paper-menu selected=\"0\">\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\nMake a multi-select menu with the `multi` attribute. Items in a multi-select menu can be deselected,\nand multiple item can be selected.\n\n    <paper-menu multi>\n      <paper-item>Item 1</paper-item>\n      <paper-item>Item 2</paper-item>\n    </paper-menu>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-menu-background-color`   | Menu background color                                            | `--primary-background-color`\n`--paper-menu-color`               | Menu foreground color                                            | `--primary-text-color`\n`--paper-menu-disabled-color`     | Foreground color for a disabled item                             | `--disabled-text-color`\n`--paper-menu`                    | Mixin applied to the menu                                        | `{}`\n`--paper-menu-selected-item`      | Mixin applied to the selected item                               | `{}`\n`--paper-menu-focused-item`       | Mixin applied to the focused item                                | `{}`\n`--paper-menu-focused-item-after` | Mixin applied to the ::after pseudo-element for the focused item | `{}`\n\n### Accessibility\n\n`<paper-menu>` has `role=\"menu\"` by default. A multi-select menu will also have\n`aria-multiselectable` set. It implements key bindings to navigate through the menu with the up and\ndown arrow keys, esc to exit the menu, and enter to activate a menu item. Typing the first letter\nof a menu item will also focus it.\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"activateEvent","type":"String","desc":"\nThe event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.\n       ","published":true,"default":"tap","observer":"_activateEventChanged","observerNode":{"type":"Literal","value":"_activateEventChanged","raw":"'_activateEventChanged'","range":[1684,1707],"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":41}}}},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"attrForItemTitle","type":"String","desc":"\nThe attribute to use on menu items to look up the item title. Typing the first\nletter of an item when the menu is open focuses that item. If unset, `textContent`\nwill be used.\n       ","published":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"attrForSelected","type":"String","desc":"\nIf you want to use the attribute value of an element for `selected` instead of the index,\nset this to the name of the attribute.\n       ","published":true,"default":null},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"focusedItem","type":"?Object","desc":"\nReturns the currently focused item.\n","published":true,"observer":"_focusedItemChanged","observerNode":{"type":"Literal","value":"_focusedItemChanged","raw":"'_focusedItemChanged'","range":[346,367],"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":39}}},"readOnly":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"indexOf","type":"Function","desc":"\nReturns the index of the given item.\n\n","params":[{"name":"item","type":"Object","desc":null}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"indexOf","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"items","type":"Function","desc":"\nReturns an array of selectable items.\n\n","params":[],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"multi","type":"Boolean","desc":"\nIf true, multiple selections are allowed.\n       ","published":true,"default":false,"observer":"multiChanged","observerNode":{"type":"Literal","value":"multiChanged","raw":"'multiChanged'","range":[277,291],"loc":{"start":{"line":12,"column":18},"end":{"line":12,"column":32}}}},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"multiChanged","type":"Function","params":[{"name":"multi"}],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"select","type":"Function","desc":"\nSelects the given value. If the `multi` property is true, then the selected state of the\n`value` will be toggled; otherwise the `value` will be selected.\n\n","params":[{"name":"value","type":"string","desc":"the value to select."}],"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectable","type":"string","desc":"\nThis is a CSS selector string.  If this is set, only items that match the CSS selector\nare selectable.\n       ","published":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selected","type":"String","desc":"\nGets or sets the selected element. The default is to use the index of the item.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedAttribute","type":"String","desc":"\nThe attribute to set on elements when selected.\n       ","published":true,"default":null},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedClass","type":"String","desc":"\nThe class to set on elements when selected.\n       ","published":true,"default":"iron-selected"},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectedItem","type":"Object","desc":"\nReturns the currently selected item.\n       ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"selectedItems","type":"Array","desc":"\nReturns an array of currently selected items.\n       ","published":true,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"selectedValues","type":"Array","desc":"\nGets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectNext","type":"Function","desc":"\nSelects the next item.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectNext","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"selectPrevious","type":"Function","desc":"\nSelects the previous item.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectPrevious","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_activateEventChanged","type":"Function","params":[{"name":"eventName"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_activateHandler","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_addListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_applySelection","type":"Function","desc":"\nMutates items in the menu based on provided selection details, so that\nall items correctly reflect selection state.\n\n","params":[{"name":"item","type":"Element","desc":"An item in the menu."},{"name":"isSelected","type":"boolean","desc":"True if the item should be shown in a\nselected state, otherwise false."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_excludedLocalNames","type":"object","desc":"\nThe set of excluded elements where the key is the `localName`\nof the element that will be ignored from the item list.\n\n","published":true,"default":"{template: 1}","jsdoc":{"tags":[{"tag":"default","type":null,"description":"{template: 1}"}]},"private":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_filterItem","type":"Function","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusedItemChanged","type":"Function","desc":"\nDiscretely updates tabindex values among menu items as the focused item\nchanges.\n\n","params":[{"name":"focusedItem","type":"Element","desc":"The element that is currently focused."},{"name":"old","type":"?Element","desc":"The last element that was considered focused, if\napplicable."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusNext","type":"Function","desc":"\nFocuses the next item (relative to the currently focused item) in the\nmenu.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusPrevious","type":"Function","desc":"\nFocuses the previous item (relative to the currently focused item) in the\nmenu.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_focusWithKeyboardEvent","type":"Function","desc":"\nGiven a KeyboardEvent, this method will focus the appropriate item in the\nmenu (if there is a relevant item, and it is possible to focus it).\n\n","params":[{"name":"event","type":"KeyboardEvent","desc":"A KeyboardEvent."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_indexToValue","type":"Function","params":[{"name":"index"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_itemActivate","type":"Function","params":[{"name":"value"},{"name":"item"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_observeContent","type":"Function","desc":" observe content changes under the given node.","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_observeItems","type":"Function","desc":" observe items change under the given node.","params":[{"name":"node"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onDownKey","type":"Function","desc":"\nHandler that is called when the down key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onEscKey","type":"Function","desc":"\nHandler that is called when the esc key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onFocus","type":"Function","desc":"\nHandler that is called when the menu receives focus.\n\n","params":[{"name":"event","type":"FocusEvent","desc":"A focus event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onIronItemsChanged","type":"Function","desc":"\nA handler that responds to mutation changes related to the list of items\nin the menu.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An event containing mutation records as its\ndetail."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onKeydown","type":"Function","desc":"\nHandler that is called when a keydown event is detected.\n\n","params":[{"name":"event","type":"KeyboardEvent","desc":"A keyboard event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onShiftTabDown","type":"Function","desc":"\nHandler that is called when a shift+tab keypress is detected by the menu.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_onUpKey","type":"Function","desc":"\nHandler that is called when the up key is pressed.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A key combination event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_removeListener","type":"Function","params":[{"name":"eventName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_resetTabindices","type":"Function","desc":"\nResets all tabindex attributes to the appropriate value based on the\ncurrent selection state. The appropriate value is `0` (focusable) for\nthe default selected item, and `-1` (not keyboard focusable) for all\nother items.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_selectionChange","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_selectMulti","type":"Function","params":[{"name":"values"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_selectSelected","type":"Function","params":[{"name":"selected"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_toggleSelected","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"_updateMultiselectable","type":"Function","desc":"\nSets appropriate ARIA based on whether or not the menu is meant to be\nmulti-selectable.\n\n","params":[{"name":"multi","type":"boolean","desc":"True if the menu should be multi-selectable."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMultiSelectableBehavior","name":"_updateSelected","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueForItem","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueToIndex","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"_valueToItem","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronSelectableBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronMenuBehavior","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronMenuBehavior"],"observers":[],"is":"paper-menu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-menu/paper-menu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-menu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"},"paper-submenu":{"type":"element","desc":"\n`<paper-submenu>` is a nested menu inside of a parent `<paper-menu>`. It\nconsists of a trigger that expands or collapses another `<paper-menu>`:\n\n    <paper-menu>\n      <paper-submenu>\n        <paper-item class=\"menu-trigger\">Topics</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Topic 1</paper-item>\n          <paper-item>Topic 2</paper-item>\n          <paper-item>Topic 3</paper-item>\n        </paper-menu>\n      </paper-submenu>\n      <paper-submenu>\n        <paper-item class=\"menu-trigger\">Faves</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Fave 1</paper-item>\n          <paper-item>Fave 2</paper-item>\n        </paper-menu>\n      </paper-submenu>\n      <paper-submenu disabled>\n        <paper-item class=\"menu-trigger\">Unavailable</paper-item>\n        <paper-menu class=\"menu-content\">\n          <paper-item>Disabled 1</paper-item>\n          <paper-item>Disabled 2</paper-item>\n        </paper-menu>\n      </paper-submenu>\n    </paper-menu>\n\nJust like in `<paper-menu>`, the focused item is highlighted, and the selected\nitem has bolded text. Please see the `<paper-menu>` docs for which attributes\n(such as `multi` and `selected`), and styling options are available for the\n`menu-content` menu.\n\n","events":[{"desc":"\nFired when the submenu is closed.\n\n","jsdoc":{"description":"\nFired when the submenu is closed.\n\n","tags":[{"tag":"event","type":null,"description":"paper-submenu-close"}],"orig":"*\n       * Fired when the submenu is closed.\n       *\n       * @event paper-submenu-close\n       "},"name":"paper-submenu-close","params":[]},{"desc":"\nFired when the submenu is opened.\n\n","jsdoc":{"description":"\nFired when the submenu is opened.\n\n","tags":[{"tag":"event","type":null,"description":"paper-submenu-open"}],"orig":"*\n       * Fired when the submenu is opened.\n       *\n       * @event paper-submenu-open\n       "},"name":"paper-submenu-open","params":[]}],"properties":[{"name":"close","type":"Function","desc":"\nCollapse the submenu content.\n     ","params":[],"function":true},{"name":"dettached","type":"Function","params":[],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"name":"open","type":"Function","desc":"\nExpand the submenu content.\n     ","params":[],"function":true},{"name":"opened","type":"Boolean","desc":"\nSet opened to true to show the collapse element and to false to hide it.\n\n","published":true,"default":false,"notify":true,"observer":"_openedChanged","observerNode":{"type":"Literal","value":"_openedChanged","raw":"'_openedChanged'","range":[530,546],"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":34}}},"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"opened"}]}},{"name":"__parent","type":"Function","params":[],"private":true,"function":true},{"name":"__trigger","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"name":"_disabledChanged","type":"Function","desc":"\nIf the dropdown is open when disabled becomes true, close the\ndropdown.\n\n","params":[{"name":"disabled","type":"boolean","desc":"True if disabled, otherwise false."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"name":"_onParentIronActivate","type":"Function","desc":"\nA handler that is called when `iron-activate` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-activate` event."}],"private":true,"function":true},{"name":"_onTap","type":"Function","desc":"\nA handler that is called when the trigger is tapped.\n     ","params":[],"private":true,"function":true},{"name":"_openedChanged","type":"Function","desc":"\nToggles the submenu content when the trigger is tapped.\n     ","params":[{"name":"opened"},{"name":"oldOpened"}],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState"],"observers":[],"is":"paper-submenu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-menu/paper-submenu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-submenu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}