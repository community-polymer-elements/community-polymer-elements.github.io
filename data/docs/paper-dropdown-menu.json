{"elements":[{"type":"element","desc":"\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nThe child element with the class `dropdown-content` will be used as the dropdown\nmenu. It could be a `paper-menu` or element that triggers `iron-select` when\nselecting its children.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-menu class=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-menu>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nSimilarly to using `iron-select`, `iron-deselect` events will cause the\ncurrent selection of the `paper-dropdown-menu` to be cleared.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n","events":[{"desc":"\nFired when the dropdown closes.\n\n","jsdoc":{"description":"\nFired when the dropdown closes.\n\n","tags":[{"tag":"event","type":null,"description":"paper-dropdown-close"}],"orig":"*\n       * Fired when the dropdown closes.\n       *\n       * @event paper-dropdown-close\n       "},"name":"paper-dropdown-close","params":[]},{"desc":"\nFired when the dropdown opens.\n\n","jsdoc":{"description":"\nFired when the dropdown opens.\n\n","tags":[{"tag":"event","type":null,"description":"paper-dropdown-open"}],"orig":"*\n       * Fired when the dropdown opens.\n       *\n       * @event paper-dropdown-open\n       "},"name":"paper-dropdown-open","params":[]}],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"alwaysFloatLabel","type":"Boolean","desc":"\nSet to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.\n         ","published":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"name":"close","type":"Function","desc":"\nHide the dropdown content.\n       ","params":[],"function":true},{"name":"contentElement","type":"Function","desc":"\nThe content element that is contained by the dropdown menu, if any.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"label","type":"String","desc":"\nThe label for the dropdown.\n         ","published":true},{"name":"noAnimations","type":"Boolean","desc":"\nSet to true to disable animations when opening and closing the\ndropdown.\n         ","published":true,"default":false},{"name":"noLabelFloat","type":"Boolean","desc":"\nSet to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.\n         ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"name":"open","type":"Function","desc":"\nShow the dropdown content.\n       ","params":[],"function":true},{"name":"opened","type":"Boolean","desc":"\nTrue if the dropdown is open. Otherwise, false.\n         ","published":true,"notify":true,"default":false},{"name":"placeholder","type":"String","desc":"\nThe placeholder for the dropdown.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"selectedItem","type":"?Object","desc":"\nThe last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.\n\n","published":true,"notify":true,"readOnly":true},{"name":"selectedItemLabel","type":"String","desc":"\nThe derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.\n         ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"name":"_computeMenuVerticalOffset","type":"Function","desc":"\nCompute the vertical offset of the menu based on the value of\n`noLabelFloat`.\n\n","params":[{"name":"noLabelFloat","type":"boolean","desc":"True if the label should not float\nabove the input, otherwise false."}],"private":true,"function":true},{"name":"_computeSelectedItemLabel","type":"Function","desc":"\nCompute the label for the dropdown given a selected item.\n\n","params":[{"name":"selectedItem","type":"Element","desc":"A selected Element item, with an\noptional `label` property."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"name":"_onIronDeselect","type":"Function","desc":"\nA handler that is called when `iron-deselect` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-deselect` event."}],"private":true,"function":true},{"name":"_onIronSelect","type":"Function","desc":"\nA handler that is called when `iron-select` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-select` event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onTap","type":"Function","desc":"\nA handler that is called when the dropdown is tapped.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A tap event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-dropdown-menu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-dropdown-menu/paper-dropdown-menu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-dropdown-menu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"paper-dropdown-menu":{"type":"element","desc":"\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nThe child element with the class `dropdown-content` will be used as the dropdown\nmenu. It could be a `paper-menu` or element that triggers `iron-select` when\nselecting its children.\n\nExample:\n\n    <paper-dropdown-menu label=\"Your favourite pastry\">\n      <paper-menu class=\"dropdown-content\">\n        <paper-item>Croissant</paper-item>\n        <paper-item>Donut</paper-item>\n        <paper-item>Financier</paper-item>\n        <paper-item>Madeleine</paper-item>\n      </paper-menu>\n    </paper-dropdown-menu>\n\nThis example renders a dropdown menu with 4 options.\n\nSimilarly to using `iron-select`, `iron-deselect` events will cause the\ncurrent selection of the `paper-dropdown-menu` to be cleared.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-ripple` | A mixin that is applied to the internal ripple | `{}`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-input` | A mixin that is applied to the internal paper input | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n\nYou can also use any of the `paper-input-container` and `paper-menu-button`\nstyle mixins and custom properties to style the internal input and menu button\nrespectively.\n\n","events":[{"desc":"\nFired when the dropdown closes.\n\n","jsdoc":{"description":"\nFired when the dropdown closes.\n\n","tags":[{"tag":"event","type":null,"description":"paper-dropdown-close"}],"orig":"*\n       * Fired when the dropdown closes.\n       *\n       * @event paper-dropdown-close\n       "},"name":"paper-dropdown-close","params":[]},{"desc":"\nFired when the dropdown opens.\n\n","jsdoc":{"description":"\nFired when the dropdown opens.\n\n","tags":[{"tag":"event","type":null,"description":"paper-dropdown-open"}],"orig":"*\n       * Fired when the dropdown opens.\n       *\n       * @event paper-dropdown-open\n       "},"name":"paper-dropdown-open","params":[]}],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"alwaysFloatLabel","type":"Boolean","desc":"\nSet to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.\n         ","published":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"name":"close","type":"Function","desc":"\nHide the dropdown content.\n       ","params":[],"function":true},{"name":"contentElement","type":"Function","desc":"\nThe content element that is contained by the dropdown menu, if any.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"label","type":"String","desc":"\nThe label for the dropdown.\n         ","published":true},{"name":"noAnimations","type":"Boolean","desc":"\nSet to true to disable animations when opening and closing the\ndropdown.\n         ","published":true,"default":false},{"name":"noLabelFloat","type":"Boolean","desc":"\nSet to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.\n         ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronControlState","name":"observers","type":"Array"},{"name":"open","type":"Function","desc":"\nShow the dropdown content.\n       ","params":[],"function":true},{"name":"opened","type":"Boolean","desc":"\nTrue if the dropdown is open. Otherwise, false.\n         ","published":true,"notify":true,"default":false},{"name":"placeholder","type":"String","desc":"\nThe placeholder for the dropdown.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"selectedItem","type":"?Object","desc":"\nThe last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.\n\n","published":true,"notify":true,"readOnly":true},{"name":"selectedItemLabel","type":"String","desc":"\nThe derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.\n         ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"name":"_computeMenuVerticalOffset","type":"Function","desc":"\nCompute the vertical offset of the menu based on the value of\n`noLabelFloat`.\n\n","params":[{"name":"noLabelFloat","type":"boolean","desc":"True if the label should not float\nabove the input, otherwise false."}],"private":true,"function":true},{"name":"_computeSelectedItemLabel","type":"Function","desc":"\nCompute the label for the dropdown given a selected item.\n\n","params":[{"name":"selectedItem","type":"Element","desc":"A selected Element item, with an\noptional `label` property."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"name":"_onIronDeselect","type":"Function","desc":"\nA handler that is called when `iron-deselect` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-deselect` event."}],"private":true,"function":true},{"name":"_onIronSelect","type":"Function","desc":"\nA handler that is called when `iron-select` is fired.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"An `iron-select` event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onTap","type":"Function","desc":"\nA handler that is called when the dropdown is tapped.\n\n","params":[{"name":"event","type":"CustomEvent","desc":"A tap event."}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronControlState","Polymer.IronButtonState"],"observers":[],"is":"paper-dropdown-menu","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-dropdown-menu/paper-dropdown-menu.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-dropdown-menu"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}