{"elements":[{"type":"element","desc":"\n`<paper-badge>` is a circular text badge that is displayed on the top right\ncorner of an element, representing a status or a notification. It will badge\nthe anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it.\n\nExample:\n\n    <div style=\"display:inline-block\">\n      <span>Inbox</span>\n      <paper-badge label=\"3\"></paper-badge>\n    </div>\n\n    <div>\n      <paper-button id=\"btn\">Status</paper-button>\n      <paper-badge for=\"btn\" label=\"♥︎\"></paper-badge>\n    </div>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-badge-background` | The background color of the badge | `--accent-color`\n`--paper-badge-opacity` | The opacity of the badge | `1.0`\n`--paper-badge-text-color` | The color of the badge text | `white`\n`--paper-badge-width` | The width of the badge circle | `22px`\n`--paper-badge-height` | The height of the badge circle | `22px`\n`--paper-badge-margin-left` | Optional spacing added to the left of the badge. | `0px`\n`--paper-badge-margin-bottom` | TOptional spacing added to the bottom of the badge. | `0px`\n`--paper-badge` | Mixin applied to the badge | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronResizableBehavior","name":"assignParentResizable","type":"Function","desc":"\nUsed to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ","params":[{"name":"parentResizable"}],"function":true},{"name":"for","type":"String","desc":"\nThe id of the element that the badge is anchored to. This element\nmust be a sibling of the badge.\n         ","published":true,"observer":"_forChanged","observerNode":{"type":"Literal","value":"_forChanged","raw":"'_forChanged'","range":[480,493],"loc":{"start":{"line":25,"column":20},"end":{"line":25,"column":33}}}},{"name":"label","type":"String","desc":"\nThe label displayed in the badge. The label is centered, and ideally\nshould have very few characters.\n         ","published":true,"observer":"_labelChanged","observerNode":{"type":"Literal","value":"_labelChanged","raw":"'_labelChanged'","range":[715,730],"loc":{"start":{"line":34,"column":20},"end":{"line":34,"column":35}}}},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"notifyResize","type":"Function","desc":"\nCan be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"resizerShouldNotify","type":"Function","desc":"\nThis method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"function":true,"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."}},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"stopResizeNotificationsFor","type":"Function","desc":"\nUsed to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ","params":[{"name":"target"}],"function":true},{"name":"target","type":"Function","desc":"\nReturns the target element that this badge is anchored to. It is\neither the element given by the `for` attribute, or the immediate parent\nof the badge.\n       ","params":[],"function":true},{"name":"updatePosition","type":"Function","desc":"\nRepositions the badge relative to its anchor element. This is called\nautomatically when the badge is attached or an `iron-resize` event is\nfired (for exmaple if the window has resized, or your target is a\ncustom element that implements IronResizableBehavior).\n\nYou should call this in all other cases when the achor's position\nmight have changed (for example, if it's visibility has changed, or\nyou've manually done a page re-layout).\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_fireResize","type":"Function","params":[],"private":true,"function":true},{"name":"_forChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_labelChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyDescendant","type":"Function","params":[{"name":"descendant"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyingDescendant","type":"Boolean","desc":"\nTrue if this element is currently notifying its descedant elements of\nresize.\n       ","published":true,"default":false,"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onDescendantIronResize","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onIronRequestResizeNotifications","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizable","type":"Object","desc":"\nThe closest ancestor element that implements `IronResizableBehavior`.\n       ","published":true,"observer":"_parentResizableChanged","observerNode":{"type":"Literal","value":"_parentResizableChanged","raw":"'_parentResizableChanged'","range":[1108,1133],"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}}},"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizableChanged","type":"Function","params":[{"name":"parentResizable"}],"private":true,"function":true},{"name":"_updateTarget","type":"Function","params":[],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Polymer.IronResizableBehavior"],"observers":[],"is":"paper-badge","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-badge/paper-badge.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-badge"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-badge":{"type":"element","desc":"\n`<paper-badge>` is a circular text badge that is displayed on the top right\ncorner of an element, representing a status or a notification. It will badge\nthe anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it.\n\nExample:\n\n    <div style=\"display:inline-block\">\n      <span>Inbox</span>\n      <paper-badge label=\"3\"></paper-badge>\n    </div>\n\n    <div>\n      <paper-button id=\"btn\">Status</paper-button>\n      <paper-badge for=\"btn\" label=\"♥︎\"></paper-badge>\n    </div>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-badge-background` | The background color of the badge | `--accent-color`\n`--paper-badge-opacity` | The opacity of the badge | `1.0`\n`--paper-badge-text-color` | The color of the badge text | `white`\n`--paper-badge-width` | The width of the badge circle | `22px`\n`--paper-badge-height` | The height of the badge circle | `22px`\n`--paper-badge-margin-left` | Optional spacing added to the left of the badge. | `0px`\n`--paper-badge-margin-bottom` | TOptional spacing added to the bottom of the badge. | `0px`\n`--paper-badge` | Mixin applied to the badge | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronResizableBehavior","name":"assignParentResizable","type":"Function","desc":"\nUsed to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ","params":[{"name":"parentResizable"}],"function":true},{"name":"for","type":"String","desc":"\nThe id of the element that the badge is anchored to. This element\nmust be a sibling of the badge.\n         ","published":true,"observer":"_forChanged","observerNode":{"type":"Literal","value":"_forChanged","raw":"'_forChanged'","range":[480,493],"loc":{"start":{"line":25,"column":20},"end":{"line":25,"column":33}}}},{"name":"label","type":"String","desc":"\nThe label displayed in the badge. The label is centered, and ideally\nshould have very few characters.\n         ","published":true,"observer":"_labelChanged","observerNode":{"type":"Literal","value":"_labelChanged","raw":"'_labelChanged'","range":[715,730],"loc":{"start":{"line":34,"column":20},"end":{"line":34,"column":35}}}},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"notifyResize","type":"Function","desc":"\nCan be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"resizerShouldNotify","type":"Function","desc":"\nThis method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"function":true,"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."}},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"stopResizeNotificationsFor","type":"Function","desc":"\nUsed to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ","params":[{"name":"target"}],"function":true},{"name":"target","type":"Function","desc":"\nReturns the target element that this badge is anchored to. It is\neither the element given by the `for` attribute, or the immediate parent\nof the badge.\n       ","params":[],"function":true},{"name":"updatePosition","type":"Function","desc":"\nRepositions the badge relative to its anchor element. This is called\nautomatically when the badge is attached or an `iron-resize` event is\nfired (for exmaple if the window has resized, or your target is a\ncustom element that implements IronResizableBehavior).\n\nYou should call this in all other cases when the achor's position\nmight have changed (for example, if it's visibility has changed, or\nyou've manually done a page re-layout).\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_fireResize","type":"Function","params":[],"private":true,"function":true},{"name":"_forChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_labelChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyDescendant","type":"Function","params":[{"name":"descendant"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyingDescendant","type":"Boolean","desc":"\nTrue if this element is currently notifying its descedant elements of\nresize.\n       ","published":true,"default":false,"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onDescendantIronResize","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onIronRequestResizeNotifications","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizable","type":"Object","desc":"\nThe closest ancestor element that implements `IronResizableBehavior`.\n       ","published":true,"observer":"_parentResizableChanged","observerNode":{"type":"Literal","value":"_parentResizableChanged","raw":"'_parentResizableChanged'","range":[1108,1133],"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}}},"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizableChanged","type":"Function","params":[{"name":"parentResizable"}],"private":true,"function":true},{"name":"_updateTarget","type":"Function","params":[],"private":true,"function":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Polymer.IronResizableBehavior"],"observers":[],"is":"paper-badge","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-badge/paper-badge.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-badge"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}