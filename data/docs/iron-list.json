{"elements":[{"type":"element","desc":"\n\n`iron-list` displays a virtual, 'infinite' list. The template inside\nthe iron-list element represents the DOM to create for each list item.\nThe `items` property specifies an array of list item data.\n\nFor performance reasons, not every item in the list is rendered at once;\ninstead a small subset of actual template elements *(enough to fill the viewport)*\nare rendered and reused as the user scrolls. As such, it is important that all\nstate of the list template be bound to the model driving it, since the view may\nbe reused with a new model at any time. Particularly, any state that may change\nas the result of a user interaction with the list item must be bound to the model\nto avoid view state inconsistency.\n\n__Important:__ `iron-list` must ether be explicitly sized, or delegate scrolling to an\nexplicitly sized parent. By \"explicitly sized\", we mean it either has an explicit\nCSS `height` property set via a class or inline style, or else is sized by other\nlayout means (e.g. the `flex` or `fit` classes).\n\n### Template model\n\nList item templates should bind to template models of the following structure:\n\n    {\n      index: 0,     // data index for this item\n      item: {       // user data corresponding to items[index]\n        /* user item data  */\n      }\n    }\n\nAlternatively, you can change the property name used as data index by changing the\n`indexAs` property. The `as` property defines the name of the variable to add to the binding\nscope for the array.\n\nFor example, given the following `data` array:\n\n##### data.json\n\n    [\n      {\"name\": \"Bob\"},\n      {\"name\": \"Tim\"},\n      {\"name\": \"Mike\"}\n    ]\n\nThe following code would render the list (note the name and checked properties are\nbound from the model object provided to the template scope):\n\n    <template is=\"dom-bind\">\n      <iron-ajax url=\"data.json\" last-response=\"{{data}}\" auto></iron-ajax>\n      <iron-list items=\"[[data]]\" as=\"item\">\n        <template>\n          <div>\n            Name: <span>[[item.name]]</span>\n          </div>\n        </template>\n      </iron-list>\n    </template>\n\n### Styling\n\nUse the `--iron-list-items-container` mixin to style the container of items, e.g.\n\n    iron-list {\n     --iron-list-items-container: {\n        margin: auto;\n      };\n    }\n\n### Resizing\n\n`iron-list` lays out the items when it recives a notification via the `iron-resize` event.\nThis event is fired by any element that implements `IronResizableBehavior`.\n\nBy default, elements such as `iron-pages`, `paper-tabs` or `paper-dialog` will trigger\nthis event automatically. If you hide the list manually (e.g. you use `display: none`)\nyou might want to implement `IronResizableBehavior` or fire this event manually right\nafter the list became visible again. e.g.\n\n    document.querySelector('iron-list').fire('iron-resize');\n\n\n","events":[],"properties":[{"name":"as","type":"String","desc":"\nThe name of the variable to add to the binding scope for the array\nelement associated with a given template instance.\n       ","published":true,"default":"item"},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"assignParentResizable","type":"Function","desc":"\nUsed to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ","params":[{"name":"parentResizable"}],"function":true},{"name":"clearSelection","type":"Function","desc":"\nClears the current selection state of the list.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clearSelection","description":null}]},"function":true},{"name":"deselectItem","type":"Function","desc":"\nDeselects the given item list if it is already selected.\n\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"deselect","description":null}]},"function":true},{"name":"firstVisibleIndex","type":"number","desc":"\nGets the first visible item in the viewport.\n\n","params":[]},{"name":"indexAs","type":"String","desc":"\nThe name of the variable to add to the binding scope with the index\nfor the row.  If `sort` is provided, the index will reflect the\nsorted order (rather than the original array order).\n       ","published":true,"default":"index"},{"name":"items","type":"Array","desc":"\nAn array containing items determining how many instances of the template\nto stamp and that that each template instance should bind to.\n       ","published":true},{"__fromBehavior":"Polymer.Templatizer","name":"modelForElement","type":"Function","params":[{"name":"el"}],"function":true},{"name":"multiSelection","type":"Boolean","desc":"\nWhen `true`, multiple items may be selected at once (in this case,\n`selected` is an array of currently selected items).  When `false`,\nonly one item may be selected at a time.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"notifyResize","type":"Function","desc":"\nCan be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"resizerShouldNotify","type":"Function","desc":"\nThis method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"function":true,"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."}},{"name":"scrollToIndex","type":"Function","desc":"\nScroll to a specific item in the virtual list regardless\nof the physical items in the DOM tree.\n\n","params":[{"name":"idx","type":"number","desc":"The index of the item"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"scrollToIndex","description":null}]},"function":true},{"name":"selectItem","type":"Function","desc":"\nSelect the list item at the given index.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectItem","description":null}]},"function":true},{"name":"selectedAs","type":"String","desc":"\nThe name of the variable to add to the binding scope to indicate\nif the row is selected.\n       ","published":true,"default":"selected"},{"name":"selectedItem","type":"Object","desc":"\nWhen `multiSelection` is false, this is the currently selected item, or `null`\nif no item is selected.\n       ","published":true,"notify":true},{"name":"selectedItems","type":"Object","desc":"\nWhen `multiSelection` is true, this is an array that contains the selected items.\n       ","published":true,"notify":true},{"name":"selectionEnabled","type":"Boolean","desc":"\nWhen true, tapping a row will select the item, placing its data model\nin the set of selected items retrievable via the selection property.\n\nNote that tapping focusable elements within the list item will not\nresult in selection, since they are presumed to have their * own action.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.Templatizer","name":"stamp","type":"Function","params":[{"name":"model"}],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"stopResizeNotificationsFor","type":"Function","desc":"\nUsed to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ","params":[{"name":"target"}],"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"templatize","type":"Function","params":[{"name":"template"}],"function":true},{"name":"toggleSelectionForItem","type":"Function","desc":"\nSelect or deselect a given item depending on whether the item\nhas already been selected.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"toggleSelectionForItem","description":null}]},"function":true},{"name":"updateSizeForItem","type":"Function","desc":"\nUpdates the size of an item.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"updateSizeForItem","description":null}]},"function":true},{"name":"updateViewportBoundaries","type":"Function","desc":"\nInvoke this method if you dynamically update the viewport's\nsize or CSS padding.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"updateViewportBoundaries","description":null}]},"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"__hideTemplateChildren__","type":"Object","published":true,"observer":"_showHideChildren","observerNode":{"type":"Literal","value":"_showHideChildren","raw":"'_showHideChildren'","range":[81088,81107],"loc":{"start":{"line":3239,"column":52},"end":{"line":3239,"column":71}}},"private":true},{"name":"_adjustScrollPosition","type":"Function","desc":"\nAdjusts the scroll position when it was overestimated.\n     ","params":[],"private":true,"function":true},{"name":"_adjustVirtualIndex","type":"Function","desc":"\n","params":[{"name":"splices","type":"!Array.<!PolymerSplice>","desc":null}],"private":true,"function":true},{"name":"_assignModels","type":"Function","desc":"\nAssigns the data models to a given set of items.\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_collection","type":"?Polymer.Collection","desc":"\nA Polymer collection for the items.\n","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_constructorImpl","type":"Function","params":[{"name":"model"},{"name":"host"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createForwardPropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createHostPropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createInstancePropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"name":"_createPool","type":"Function","desc":"\nCreates a pool of DOM elements and attaches them to the local dom.\n     ","params":[{"name":"size"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_customPrepAnnotations","type":"Function","params":[{"name":"archetype"},{"name":"template"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_customPrepEffects","type":"Function","params":[{"name":"archetype"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_debounceTemplate","type":"Function","params":[{"name":"fn"}],"private":true,"function":true},{"name":"_ensureTemplatized","type":"Function","desc":"\nTempletizes the user template.\n     ","params":[],"private":true,"function":true},{"name":"_estScrollHeight","type":"number","desc":"\nThe estimated scroll height based on `_physicalAverage`\n     ","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_extendTemplate","type":"Function","params":[{"name":"template"},{"name":"proto"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_fireResize","type":"Function","params":[],"private":true,"function":true},{"name":"_firstVisibleIndexVal","type":"?number","desc":"\nA cached value for the visible index.\nSee `firstVisibleIndex`\n","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_flushTemplates","type":"Function","params":[{"name":"debouncerExpired"}],"private":true,"function":true},{"name":"_forwardInstancePath","type":"Function","desc":"\nImplements extension point from Templatizer\nCalled as a side effect of a template instance path change, responsible\nfor notifying items.<key-for-instance>.<path> change up to host.\n     ","params":[{"name":"inst"},{"name":"path"},{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_forwardInstanceProp","type":"Function","params":[{"name":"inst"},{"name":"prop"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardItemPath","type":"Function","desc":"\nCalled as a side effect of a host items.<key>.<path> path change,\nresponsible for notifying item.<path> changes to row for key.\n     ","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardParentPath","type":"Function","desc":"\nImplements extension point from Templatizer\nCalled as side-effect of a host path change, responsible for\nnotifying parent.<path> path change on each row.\n     ","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardParentProp","type":"Function","desc":"\nImplements extension point from Templatizer mixin\nCalled as side-effect of a host property change, responsible for\nnotifying parent path change on each row.\n     ","params":[{"name":"prop"},{"name":"value"}],"private":true,"function":true},{"name":"_getModelFromItem","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_getNormalizedItem","type":"Function","desc":"\nGets a valid item instance from its index or the object value.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_getRootDataHost","type":"Function","params":[],"private":true,"function":true},{"name":"_getStampedChildren","type":"Function","desc":"\nImplements extension point from Templatizer mixin.\n     ","params":[],"private":true,"function":true},{"name":"_hiddenContentSize","type":"Function","desc":"\nThe height of the physical content that isn't on the screen.\n     ","params":[],"private":true,"function":true},{"name":"_increasePoolIfNeeded","type":"Function","desc":"\nIncreases the pool size. That is, the physical items in the DOM.\nThis function will allocate additional physical items\n(limited by `MAX_PHYSICAL_COUNT`) if the content size is shorter than\n`_optPhysicalSize`\n\n","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_instanceProps","type":"Member","private":true},{"name":"_isVisible","type":"Function","desc":"\nTrue if the current list is visible.\n    ","params":[],"private":true,"function":true},{"name":"_itemsChanged","type":"Function","desc":"\nCalled when the items have changed. That is, ressignments\nto `items`, splices or updates to a single item.\n     ","params":[{"name":"change"}],"private":true,"function":true},{"name":"_itemsRendered","type":"boolean","desc":"\nTrue if the current item list was rendered for the first time\nafter attached.\n     ","private":true},{"name":"_iterateItems","type":"Function","desc":"\nExecutes a provided function per every physical index in `itemSet`\n`itemSet` default value is equivalent to the entire set of physical indexes.\n\n","params":[{"name":"fn","type":"!function (number, number)","desc":null},{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_listenImpl","type":"Function","params":[{"name":"node"},{"name":"eventName"},{"name":"methodName"}],"private":true,"function":true},{"name":"_maxScrollTop","type":"Function","desc":"\nThe maximum scroll top value.\n     ","params":[],"private":true,"function":true},{"name":"_maxVirtualStart","type":"Function","desc":"\nThe largest n-th value for an item such that it can be rendered in `_physicalStart`.\n     ","params":[],"private":true,"function":true},{"name":"_minVirtualStart","type":"number","desc":"\nThe lowest n-th value for an item such that it can be rendered in `_physicalStart`.\n     ","private":true},{"name":"_multiSelectionChanged","type":"Function","params":[{"name":"multiSelection"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyDescendant","type":"Function","params":[{"name":"descendant"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_notifyPathImpl","type":"Function","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyingDescendant","type":"Boolean","desc":"\nTrue if this element is currently notifying its descedant elements of\nresize.\n       ","published":true,"default":false,"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onDescendantIronResize","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onIronRequestResizeNotifications","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_optPhysicalSize","type":"Function","desc":"\nAn optimal physical size such that we will have enough physical items\nto fill up the viewport and recycle when the user scrolls.\n\nThis default value assumes that we will at least have the equivalent\nto a viewport of physical items above and below the user's viewport.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_parentPropPrefix","type":"string","private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizable","type":"Object","desc":"\nThe closest ancestor element that implements `IronResizableBehavior`.\n       ","published":true,"observer":"_parentResizableChanged","observerNode":{"type":"Literal","value":"_parentResizableChanged","raw":"'_parentResizableChanged'","range":[1108,1133],"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}}},"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizableChanged","type":"Function","params":[{"name":"parentResizable"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_pathEffector","type":"Function","params":[{"name":"path"},{"name":"value"},{"name":"fromAbove"}],"private":true,"function":true},{"name":"_physicalAverage","type":"number","desc":"\nThe average `offsetHeight` of the tiles observed till now.\n     ","private":true},{"name":"_physicalAverageCount","type":"number","desc":"\nThe number of tiles which `offsetHeight` > 0 observed until now.\n     ","private":true},{"name":"_physicalBottom","type":"Function","desc":"\nThe bottom of the physical content.\n     ","params":[],"private":true,"function":true},{"name":"_physicalCount","type":"number","desc":"\nThe number of tiles in the DOM.\n     ","private":true},{"name":"_physicalEnd","type":"number","desc":"\nThe k-th tile that is at the bottom of the scrolling list.\n     ","private":true},{"name":"_physicalIndexForKey","type":"object","desc":"\nA map between an item key and its physical item index\n     ","private":true},{"name":"_physicalItems","type":"?Array.<!TemplatizerNode>","desc":"\nAn array of DOM nodes that are currently in the tree\n","private":true},{"name":"_physicalSize","type":"number","desc":"\nThe sum of the heights of all the tiles in the DOM.\n     ","private":true},{"name":"_physicalSizes","type":"?Array.<number>","desc":"\nAn array of heights for each item in `_physicalItems`\n","private":true},{"name":"_physicalStart","type":"number","desc":"\nThe k-th tile that is at the top of the scrolling list.\n     ","private":true},{"name":"_physicalTop","type":"number","desc":"\nThe Y position of the item rendered in the `_physicalStart`\ntile relative to the scrolling list.\n     ","private":true},{"name":"_positionItems","type":"Function","desc":"\nUpdates the position of the physical items.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_prepParentProperties","type":"Function","params":[{"name":"archetype"},{"name":"template"}],"private":true,"function":true},{"name":"_ratio","type":"number","desc":"\nThe ratio of hidden tiles that should remain in the scroll direction.\nRecommended value ~0.5, so it will distribute tiles evely in both directions.\n     ","private":true},{"name":"_refresh","type":"Function","desc":"\nUpdate the models, the position of the\nitems in the viewport and recycle tiles as needed.\n     ","params":[],"private":true,"function":true},{"name":"_render","type":"Function","desc":"\nRender a new list of items. This method does exactly the same as `update`,\nbut it also ensures that only one `update` cycle is created.\n     ","params":[],"private":true,"function":true},{"name":"_resetAverage","type":"Function","desc":"\nReset the physical average and the average count.\n     ","params":[],"private":true,"function":true},{"name":"_resetScrollPosition","type":"Function","desc":"\nSets the position of the scroll.\n     ","params":[{"name":"pos"}],"private":true,"function":true},{"name":"_resizeHandler","type":"Function","desc":"\nA handler for the `iron-resize` event triggered by `IronResizableBehavior`\nwhen the element is resized.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_scopeElementClassImpl","type":"Function","params":[{"name":"node"},{"name":"value"}],"private":true,"function":true},{"name":"_scrollHandler","type":"Function","params":[],"private":true,"function":true},{"name":"_scrollHeight","type":"number","desc":"\nThe scroll height of the dom node\n     ","private":true},{"name":"_scrollPosition","type":"number","desc":"\nThis value is the same as `scrollTop`.\n     ","private":true},{"name":"_scroller","type":"?Element","desc":"\nThe element that controls the scroll\n","private":true},{"name":"_scrollerPaddingTop","type":"number","desc":"\nThe padding-top value of the `scroller` element\n     ","private":true},{"name":"_selectionEnabledChanged","type":"Function","desc":"\nAdd an event listener to `tap` if `selectionEnabled` is true,\nit will remove the listener otherwise.\n     ","params":[{"name":"selectionEnabled"}],"private":true,"function":true},{"name":"_selectionHandler","type":"Function","desc":"\nSelect an item from an event object.\n     ","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_showHideChildren","type":"Function","params":[{"name":"hidden"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_showHideChildrenImpl","type":"Function","params":[{"name":"hide"}],"private":true,"function":true},{"name":"_update","type":"Function","desc":"\nUpdate the list of items, starting from the `_virtualStartVal` item.\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null},{"name":"movingUp","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_updateMetrics","type":"Function","desc":"\nUpdates the height for a given set of items.\n\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_updateScrollerSize","type":"Function","desc":"\nSets the scroll height, that's the height of the content,\n\n","params":[{"name":"forceUpdate","type":"boolean=","desc":"If true, updates the height no matter what."}],"private":true,"function":true},{"name":"_viewportSize","type":"number","desc":"\nThe size of the viewport\n     ","private":true},{"name":"_virtualCount","type":"number","desc":"\nThe number of items in the list.\n     ","private":true},{"name":"_virtualEnd","type":"Function","desc":"\nThe n-th item rendered in the last physical item.\n     ","params":[],"private":true,"function":true},{"name":"_virtualStart","type":"Function","desc":"\nSets the n-th item rendered in `_physicalStart`\n     ","params":[{"name":"val"}],"private":true,"function":true},{"name":"_virtualStart","type":"Function","desc":"\nGets the n-th item rendered in `_physicalStart`\n     ","params":[],"private":true,"function":true},{"name":"_virtualStartVal","type":"number","desc":"\nThe n-th item rendered in the `_physicalStart` tile.\n     ","private":true},{"name":"attached","type":"Function","desc":"\nWhen the element has been attached to the DOM tree.\n     ","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nWhen the element has been removed from the DOM tree.\n     ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.Templatizer","Polymer.IronResizableBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_itemsChanged(items.*)","raw":"'_itemsChanged(items.*)'","range":[2371,2395],"loc":{"start":{"line":93,"column":6},"end":{"line":93,"column":30}}},"expression":"_itemsChanged(items.*)"},{"javascriptNode":{"type":"Literal","value":"_selectionEnabledChanged(selectionEnabled)","raw":"'_selectionEnabledChanged(selectionEnabled)'","range":[2403,2447],"loc":{"start":{"line":94,"column":6},"end":{"line":94,"column":50}}},"expression":"_selectionEnabledChanged(selectionEnabled)"},{"javascriptNode":{"type":"Literal","value":"_multiSelectionChanged(multiSelection)","raw":"'_multiSelectionChanged(multiSelection)'","range":[2455,2495],"loc":{"start":{"line":95,"column":6},"end":{"line":95,"column":46}}},"expression":"_multiSelectionChanged(multiSelection)"}],"is":"iron-list","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/iron-list/iron-list.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Iron Element"},{"tag":"element","type":null,"description":"iron-list"},{"tag":"demo","type":null,"name":"demo/index.html","description":"Simple list"},{"tag":"demo","type":null,"name":"demo/selection.html","description":"Selection of items"},{"tag":"demo","type":null,"name":"demo/collapse.html","description":"Collapsable items"}]},"demos":[{"desc":"Simple list","path":"demo/index.html"},{"desc":"Selection of items","path":"demo/selection.html"},{"desc":"Collapsable items","path":"demo/collapse.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"iron-list":{"type":"element","desc":"\n\n`iron-list` displays a virtual, 'infinite' list. The template inside\nthe iron-list element represents the DOM to create for each list item.\nThe `items` property specifies an array of list item data.\n\nFor performance reasons, not every item in the list is rendered at once;\ninstead a small subset of actual template elements *(enough to fill the viewport)*\nare rendered and reused as the user scrolls. As such, it is important that all\nstate of the list template be bound to the model driving it, since the view may\nbe reused with a new model at any time. Particularly, any state that may change\nas the result of a user interaction with the list item must be bound to the model\nto avoid view state inconsistency.\n\n__Important:__ `iron-list` must ether be explicitly sized, or delegate scrolling to an\nexplicitly sized parent. By \"explicitly sized\", we mean it either has an explicit\nCSS `height` property set via a class or inline style, or else is sized by other\nlayout means (e.g. the `flex` or `fit` classes).\n\n### Template model\n\nList item templates should bind to template models of the following structure:\n\n    {\n      index: 0,     // data index for this item\n      item: {       // user data corresponding to items[index]\n        /* user item data  */\n      }\n    }\n\nAlternatively, you can change the property name used as data index by changing the\n`indexAs` property. The `as` property defines the name of the variable to add to the binding\nscope for the array.\n\nFor example, given the following `data` array:\n\n##### data.json\n\n    [\n      {\"name\": \"Bob\"},\n      {\"name\": \"Tim\"},\n      {\"name\": \"Mike\"}\n    ]\n\nThe following code would render the list (note the name and checked properties are\nbound from the model object provided to the template scope):\n\n    <template is=\"dom-bind\">\n      <iron-ajax url=\"data.json\" last-response=\"{{data}}\" auto></iron-ajax>\n      <iron-list items=\"[[data]]\" as=\"item\">\n        <template>\n          <div>\n            Name: <span>[[item.name]]</span>\n          </div>\n        </template>\n      </iron-list>\n    </template>\n\n### Styling\n\nUse the `--iron-list-items-container` mixin to style the container of items, e.g.\n\n    iron-list {\n     --iron-list-items-container: {\n        margin: auto;\n      };\n    }\n\n### Resizing\n\n`iron-list` lays out the items when it recives a notification via the `iron-resize` event.\nThis event is fired by any element that implements `IronResizableBehavior`.\n\nBy default, elements such as `iron-pages`, `paper-tabs` or `paper-dialog` will trigger\nthis event automatically. If you hide the list manually (e.g. you use `display: none`)\nyou might want to implement `IronResizableBehavior` or fire this event manually right\nafter the list became visible again. e.g.\n\n    document.querySelector('iron-list').fire('iron-resize');\n\n\n","events":[],"properties":[{"name":"as","type":"String","desc":"\nThe name of the variable to add to the binding scope for the array\nelement associated with a given template instance.\n       ","published":true,"default":"item"},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"assignParentResizable","type":"Function","desc":"\nUsed to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.\n     ","params":[{"name":"parentResizable"}],"function":true},{"name":"clearSelection","type":"Function","desc":"\nClears the current selection state of the list.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"clearSelection","description":null}]},"function":true},{"name":"deselectItem","type":"Function","desc":"\nDeselects the given item list if it is already selected.\n\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"deselect","description":null}]},"function":true},{"name":"firstVisibleIndex","type":"number","desc":"\nGets the first visible item in the viewport.\n\n","params":[]},{"name":"indexAs","type":"String","desc":"\nThe name of the variable to add to the binding scope with the index\nfor the row.  If `sort` is provided, the index will reflect the\nsorted order (rather than the original array order).\n       ","published":true,"default":"index"},{"name":"items","type":"Array","desc":"\nAn array containing items determining how many instances of the template\nto stamp and that that each template instance should bind to.\n       ","published":true},{"__fromBehavior":"Polymer.Templatizer","name":"modelForElement","type":"Function","params":[{"name":"el"}],"function":true},{"name":"multiSelection","type":"Boolean","desc":"\nWhen `true`, multiple items may be selected at once (in this case,\n`selected` is an array of currently selected items).  When `false`,\nonly one item may be selected at a time.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"notifyResize","type":"Function","desc":"\nCan be called to manually notify a resizable and its descendant\nresizables of a resize change.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"resizerShouldNotify","type":"Function","desc":"\nThis method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.\n\n","params":[{"name":"element","type":"HTMLElement","desc":"A candidate descendant element that\nimplements `IronResizableBehavior`."}],"function":true,"return":{"type":"boolean","desc":"True if the `element` should be notified of resize."}},{"name":"scrollToIndex","type":"Function","desc":"\nScroll to a specific item in the virtual list regardless\nof the physical items in the DOM tree.\n\n","params":[{"name":"idx","type":"number","desc":"The index of the item"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"scrollToIndex","description":null}]},"function":true},{"name":"selectItem","type":"Function","desc":"\nSelect the list item at the given index.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"selectItem","description":null}]},"function":true},{"name":"selectedAs","type":"String","desc":"\nThe name of the variable to add to the binding scope to indicate\nif the row is selected.\n       ","published":true,"default":"selected"},{"name":"selectedItem","type":"Object","desc":"\nWhen `multiSelection` is false, this is the currently selected item, or `null`\nif no item is selected.\n       ","published":true,"notify":true},{"name":"selectedItems","type":"Object","desc":"\nWhen `multiSelection` is true, this is an array that contains the selected items.\n       ","published":true,"notify":true},{"name":"selectionEnabled","type":"Boolean","desc":"\nWhen true, tapping a row will select the item, placing its data model\nin the set of selected items retrievable via the selection property.\n\nNote that tapping focusable elements within the list item will not\nresult in selection, since they are presumed to have their * own action.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.Templatizer","name":"stamp","type":"Function","params":[{"name":"model"}],"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"stopResizeNotificationsFor","type":"Function","desc":"\nUsed to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.\n     ","params":[{"name":"target"}],"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"templatize","type":"Function","params":[{"name":"template"}],"function":true},{"name":"toggleSelectionForItem","type":"Function","desc":"\nSelect or deselect a given item depending on whether the item\nhas already been selected.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"toggleSelectionForItem","description":null}]},"function":true},{"name":"updateSizeForItem","type":"Function","desc":"\nUpdates the size of an item.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"updateSizeForItem","description":null}]},"function":true},{"name":"updateViewportBoundaries","type":"Function","desc":"\nInvoke this method if you dynamically update the viewport's\nsize or CSS padding.\n\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"updateViewportBoundaries","description":null}]},"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"__hideTemplateChildren__","type":"Object","published":true,"observer":"_showHideChildren","observerNode":{"type":"Literal","value":"_showHideChildren","raw":"'_showHideChildren'","range":[81088,81107],"loc":{"start":{"line":3239,"column":52},"end":{"line":3239,"column":71}}},"private":true},{"name":"_adjustScrollPosition","type":"Function","desc":"\nAdjusts the scroll position when it was overestimated.\n     ","params":[],"private":true,"function":true},{"name":"_adjustVirtualIndex","type":"Function","desc":"\n","params":[{"name":"splices","type":"!Array.<!PolymerSplice>","desc":null}],"private":true,"function":true},{"name":"_assignModels","type":"Function","desc":"\nAssigns the data models to a given set of items.\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_collection","type":"?Polymer.Collection","desc":"\nA Polymer collection for the items.\n","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_constructorImpl","type":"Function","params":[{"name":"model"},{"name":"host"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createForwardPropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createHostPropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_createInstancePropEffector","type":"Function","params":[{"name":"prop"}],"private":true,"function":true},{"name":"_createPool","type":"Function","desc":"\nCreates a pool of DOM elements and attaches them to the local dom.\n     ","params":[{"name":"size"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_customPrepAnnotations","type":"Function","params":[{"name":"archetype"},{"name":"template"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_customPrepEffects","type":"Function","params":[{"name":"archetype"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_debounceTemplate","type":"Function","params":[{"name":"fn"}],"private":true,"function":true},{"name":"_ensureTemplatized","type":"Function","desc":"\nTempletizes the user template.\n     ","params":[],"private":true,"function":true},{"name":"_estScrollHeight","type":"number","desc":"\nThe estimated scroll height based on `_physicalAverage`\n     ","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_extendTemplate","type":"Function","params":[{"name":"template"},{"name":"proto"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_fireResize","type":"Function","params":[],"private":true,"function":true},{"name":"_firstVisibleIndexVal","type":"?number","desc":"\nA cached value for the visible index.\nSee `firstVisibleIndex`\n","private":true},{"__fromBehavior":"Polymer.Templatizer","name":"_flushTemplates","type":"Function","params":[{"name":"debouncerExpired"}],"private":true,"function":true},{"name":"_forwardInstancePath","type":"Function","desc":"\nImplements extension point from Templatizer\nCalled as a side effect of a template instance path change, responsible\nfor notifying items.<key-for-instance>.<path> change up to host.\n     ","params":[{"name":"inst"},{"name":"path"},{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_forwardInstanceProp","type":"Function","params":[{"name":"inst"},{"name":"prop"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardItemPath","type":"Function","desc":"\nCalled as a side effect of a host items.<key>.<path> path change,\nresponsible for notifying item.<path> changes to row for key.\n     ","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardParentPath","type":"Function","desc":"\nImplements extension point from Templatizer\nCalled as side-effect of a host path change, responsible for\nnotifying parent.<path> path change on each row.\n     ","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"name":"_forwardParentProp","type":"Function","desc":"\nImplements extension point from Templatizer mixin\nCalled as side-effect of a host property change, responsible for\nnotifying parent path change on each row.\n     ","params":[{"name":"prop"},{"name":"value"}],"private":true,"function":true},{"name":"_getModelFromItem","type":"Function","params":[{"name":"item"}],"private":true,"function":true},{"name":"_getNormalizedItem","type":"Function","desc":"\nGets a valid item instance from its index or the object value.\n\n","params":[{"name":"item","type":"(Object|number)","desc":"The item object or its index"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_getRootDataHost","type":"Function","params":[],"private":true,"function":true},{"name":"_getStampedChildren","type":"Function","desc":"\nImplements extension point from Templatizer mixin.\n     ","params":[],"private":true,"function":true},{"name":"_hiddenContentSize","type":"Function","desc":"\nThe height of the physical content that isn't on the screen.\n     ","params":[],"private":true,"function":true},{"name":"_increasePoolIfNeeded","type":"Function","desc":"\nIncreases the pool size. That is, the physical items in the DOM.\nThis function will allocate additional physical items\n(limited by `MAX_PHYSICAL_COUNT`) if the content size is shorter than\n`_optPhysicalSize`\n\n","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_instanceProps","type":"Member","private":true},{"name":"_isVisible","type":"Function","desc":"\nTrue if the current list is visible.\n    ","params":[],"private":true,"function":true},{"name":"_itemsChanged","type":"Function","desc":"\nCalled when the items have changed. That is, ressignments\nto `items`, splices or updates to a single item.\n     ","params":[{"name":"change"}],"private":true,"function":true},{"name":"_itemsRendered","type":"boolean","desc":"\nTrue if the current item list was rendered for the first time\nafter attached.\n     ","private":true},{"name":"_iterateItems","type":"Function","desc":"\nExecutes a provided function per every physical index in `itemSet`\n`itemSet` default value is equivalent to the entire set of physical indexes.\n\n","params":[{"name":"fn","type":"!function (number, number)","desc":null},{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_listenImpl","type":"Function","params":[{"name":"node"},{"name":"eventName"},{"name":"methodName"}],"private":true,"function":true},{"name":"_maxScrollTop","type":"Function","desc":"\nThe maximum scroll top value.\n     ","params":[],"private":true,"function":true},{"name":"_maxVirtualStart","type":"Function","desc":"\nThe largest n-th value for an item such that it can be rendered in `_physicalStart`.\n     ","params":[],"private":true,"function":true},{"name":"_minVirtualStart","type":"number","desc":"\nThe lowest n-th value for an item such that it can be rendered in `_physicalStart`.\n     ","private":true},{"name":"_multiSelectionChanged","type":"Function","params":[{"name":"multiSelection"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyDescendant","type":"Function","params":[{"name":"descendant"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_notifyPathImpl","type":"Function","params":[{"name":"path"},{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_notifyingDescendant","type":"Boolean","desc":"\nTrue if this element is currently notifying its descedant elements of\nresize.\n       ","published":true,"default":false,"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onDescendantIronResize","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_onIronRequestResizeNotifications","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_optPhysicalSize","type":"Function","desc":"\nAn optimal physical size such that we will have enough physical items\nto fill up the viewport and recycle when the user scrolls.\n\nThis default value assumes that we will at least have the equivalent\nto a viewport of physical items above and below the user's viewport.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_parentPropPrefix","type":"string","private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizable","type":"Object","desc":"\nThe closest ancestor element that implements `IronResizableBehavior`.\n       ","published":true,"observer":"_parentResizableChanged","observerNode":{"type":"Literal","value":"_parentResizableChanged","raw":"'_parentResizableChanged'","range":[1108,1133],"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}}},"private":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"_parentResizableChanged","type":"Function","params":[{"name":"parentResizable"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_pathEffector","type":"Function","params":[{"name":"path"},{"name":"value"},{"name":"fromAbove"}],"private":true,"function":true},{"name":"_physicalAverage","type":"number","desc":"\nThe average `offsetHeight` of the tiles observed till now.\n     ","private":true},{"name":"_physicalAverageCount","type":"number","desc":"\nThe number of tiles which `offsetHeight` > 0 observed until now.\n     ","private":true},{"name":"_physicalBottom","type":"Function","desc":"\nThe bottom of the physical content.\n     ","params":[],"private":true,"function":true},{"name":"_physicalCount","type":"number","desc":"\nThe number of tiles in the DOM.\n     ","private":true},{"name":"_physicalEnd","type":"number","desc":"\nThe k-th tile that is at the bottom of the scrolling list.\n     ","private":true},{"name":"_physicalIndexForKey","type":"object","desc":"\nA map between an item key and its physical item index\n     ","private":true},{"name":"_physicalItems","type":"?Array.<!TemplatizerNode>","desc":"\nAn array of DOM nodes that are currently in the tree\n","private":true},{"name":"_physicalSize","type":"number","desc":"\nThe sum of the heights of all the tiles in the DOM.\n     ","private":true},{"name":"_physicalSizes","type":"?Array.<number>","desc":"\nAn array of heights for each item in `_physicalItems`\n","private":true},{"name":"_physicalStart","type":"number","desc":"\nThe k-th tile that is at the top of the scrolling list.\n     ","private":true},{"name":"_physicalTop","type":"number","desc":"\nThe Y position of the item rendered in the `_physicalStart`\ntile relative to the scrolling list.\n     ","private":true},{"name":"_positionItems","type":"Function","desc":"\nUpdates the position of the physical items.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_prepParentProperties","type":"Function","params":[{"name":"archetype"},{"name":"template"}],"private":true,"function":true},{"name":"_ratio","type":"number","desc":"\nThe ratio of hidden tiles that should remain in the scroll direction.\nRecommended value ~0.5, so it will distribute tiles evely in both directions.\n     ","private":true},{"name":"_refresh","type":"Function","desc":"\nUpdate the models, the position of the\nitems in the viewport and recycle tiles as needed.\n     ","params":[],"private":true,"function":true},{"name":"_render","type":"Function","desc":"\nRender a new list of items. This method does exactly the same as `update`,\nbut it also ensures that only one `update` cycle is created.\n     ","params":[],"private":true,"function":true},{"name":"_resetAverage","type":"Function","desc":"\nReset the physical average and the average count.\n     ","params":[],"private":true,"function":true},{"name":"_resetScrollPosition","type":"Function","desc":"\nSets the position of the scroll.\n     ","params":[{"name":"pos"}],"private":true,"function":true},{"name":"_resizeHandler","type":"Function","desc":"\nA handler for the `iron-resize` event triggered by `IronResizableBehavior`\nwhen the element is resized.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_scopeElementClassImpl","type":"Function","params":[{"name":"node"},{"name":"value"}],"private":true,"function":true},{"name":"_scrollHandler","type":"Function","params":[],"private":true,"function":true},{"name":"_scrollHeight","type":"number","desc":"\nThe scroll height of the dom node\n     ","private":true},{"name":"_scrollPosition","type":"number","desc":"\nThis value is the same as `scrollTop`.\n     ","private":true},{"name":"_scroller","type":"?Element","desc":"\nThe element that controls the scroll\n","private":true},{"name":"_scrollerPaddingTop","type":"number","desc":"\nThe padding-top value of the `scroller` element\n     ","private":true},{"name":"_selectionEnabledChanged","type":"Function","desc":"\nAdd an event listener to `tap` if `selectionEnabled` is true,\nit will remove the listener otherwise.\n     ","params":[{"name":"selectionEnabled"}],"private":true,"function":true},{"name":"_selectionHandler","type":"Function","desc":"\nSelect an item from an event object.\n     ","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_showHideChildren","type":"Function","params":[{"name":"hidden"}],"private":true,"function":true},{"__fromBehavior":"Polymer.Templatizer","name":"_showHideChildrenImpl","type":"Function","params":[{"name":"hide"}],"private":true,"function":true},{"name":"_update","type":"Function","desc":"\nUpdate the list of items, starting from the `_virtualStartVal` item.\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null},{"name":"movingUp","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_updateMetrics","type":"Function","desc":"\nUpdates the height for a given set of items.\n\n","params":[{"name":"itemSet","type":"!Array.<number>=","desc":null}],"private":true,"function":true},{"name":"_updateScrollerSize","type":"Function","desc":"\nSets the scroll height, that's the height of the content,\n\n","params":[{"name":"forceUpdate","type":"boolean=","desc":"If true, updates the height no matter what."}],"private":true,"function":true},{"name":"_viewportSize","type":"number","desc":"\nThe size of the viewport\n     ","private":true},{"name":"_virtualCount","type":"number","desc":"\nThe number of items in the list.\n     ","private":true},{"name":"_virtualEnd","type":"Function","desc":"\nThe n-th item rendered in the last physical item.\n     ","params":[],"private":true,"function":true},{"name":"_virtualStart","type":"Function","desc":"\nSets the n-th item rendered in `_physicalStart`\n     ","params":[{"name":"val"}],"private":true,"function":true},{"name":"_virtualStart","type":"Function","desc":"\nGets the n-th item rendered in `_physicalStart`\n     ","params":[],"private":true,"function":true},{"name":"_virtualStartVal","type":"number","desc":"\nThe n-th item rendered in the `_physicalStart` tile.\n     ","private":true},{"name":"attached","type":"Function","desc":"\nWhen the element has been attached to the DOM tree.\n     ","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronResizableBehavior","name":"created","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","desc":"\nWhen the element has been removed from the DOM tree.\n     ","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.Templatizer","Polymer.IronResizableBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_itemsChanged(items.*)","raw":"'_itemsChanged(items.*)'","range":[2371,2395],"loc":{"start":{"line":93,"column":6},"end":{"line":93,"column":30}}},"expression":"_itemsChanged(items.*)"},{"javascriptNode":{"type":"Literal","value":"_selectionEnabledChanged(selectionEnabled)","raw":"'_selectionEnabledChanged(selectionEnabled)'","range":[2403,2447],"loc":{"start":{"line":94,"column":6},"end":{"line":94,"column":50}}},"expression":"_selectionEnabledChanged(selectionEnabled)"},{"javascriptNode":{"type":"Literal","value":"_multiSelectionChanged(multiSelection)","raw":"'_multiSelectionChanged(multiSelection)'","range":[2455,2495],"loc":{"start":{"line":95,"column":6},"end":{"line":95,"column":46}}},"expression":"_multiSelectionChanged(multiSelection)"}],"is":"iron-list","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/iron-list/iron-list.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Iron Element"},{"tag":"element","type":null,"description":"iron-list"},{"tag":"demo","type":null,"name":"demo/index.html","description":"Simple list"},{"tag":"demo","type":null,"name":"demo/selection.html","description":"Selection of items"},{"tag":"demo","type":null,"name":"demo/collapse.html","description":"Collapsable items"}]},"demos":[{"desc":"Simple list","path":"demo/index.html"},{"desc":"Selection of items","path":"demo/selection.html"},{"desc":"Collapsable items","path":"demo/collapse.html"}]}}}