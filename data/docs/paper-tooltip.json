{"elements":[{"type":"element","desc":"\nMaterial design: [Tooltips](https://www.google.com/design/spec/components/tooltips.html)\n\n`<paper-tooltip>` is a label that appears on hover and focus when the user\nhovers over an element with the cursor or with the keyboard. It will be centered\nto an anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it.\n\nExample:\n\n    <div style=\"display:inline-block\">\n      <button>Click me!</button>\n      <paper-tooltip>Tooltip text</paper-tooltip>\n    </div>\n\n    <div>\n      <button id=\"btn\">Click me!</button>\n      <paper-tooltip for=\"btn\">Tooltip text</paper-tooltip>\n    </div>\n\nThe tooltip can be positioned on the top|bottom|left|right of the anchor using\nthe `position` attribute. The default position is bottom.\n\n    <paper-tooltip for=\"btn\" position=\"left\">Tooltip text</paper-tooltip>\n    <paper-tooltip for=\"btn\" position=\"top\">Tooltip text</paper-tooltip>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tooltip-background` | The background color of the tooltip | `#616161`\n`--paper-tooltip-opacity` | The opacity of the tooltip | `0.9`\n`--paper-tooltip-text-color` | The text color of the tooltip | `white`\n`--paper-tooltip` | Mixin applied to the tooltip | `{}`\n\n","events":[],"properties":[{"name":"animationConfig","type":"Object","desc":"\nThe entry and exit animations that will be played when showing and\nhiding the tooltip. If you want to override this, you must ensure\nthat your animationConfig has the exact format below.\n         ","published":true,"default":"{\"entry\": [{\"name\": fade-in-animation, \"timing\": {\"delay\": 0}}], \"exit\": [{\"name\": fade-out-animation}]}"},{"name":"animationDelay","type":"Number","desc":"\nThe delay that will be applied before the `entry` animation is\nplayed when showing the tooltip.\n         ","published":true,"default":500},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"cancelAnimation","type":"Function","desc":"\nCancels the currently running animation.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"entryAnimation","type":"String","desc":"\nConvenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.\n       ","published":true,"observer":"_entryAnimationChanged","observerNode":{"type":"Literal","value":"_entryAnimationChanged","raw":"'_entryAnimationChanged'","range":[648,672],"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":42}}}},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"exitAnimation","type":"String","desc":"\nConvenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.\n       ","published":true,"observer":"_exitAnimationChanged","observerNode":{"type":"Literal","value":"_exitAnimationChanged","raw":"'_exitAnimationChanged'","range":[955,978],"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":41}}}},{"name":"fitToVisibleBounds","type":"Boolean","desc":"\nIf true, no parts of the tooltip will ever be shown offscreen.\n         ","published":true,"default":false},{"name":"for","type":"String","desc":"\nThe id of the element that the tooltip is anchored to. This element\nmust be a sibling of the tooltip.\n         ","published":true,"observer":"_forChanged","observerNode":{"type":"Literal","value":"_forChanged","raw":"'_forChanged'","range":[423,436],"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"getAnimationConfig","type":"Function","desc":"\nAn element implementing `Polymer.NeonAnimationRunnerBehavior` calls this method to configure\nan animation with an optional type. Elements implementing `Polymer.NeonAnimatableBehavior`\nshould define the property `animationConfig`, which is either a configuration object\nor a map of animation type to array of configuration objects.\n     ","params":[{"name":"type"}],"function":true},{"name":"hide","type":"Function","params":[],"function":true},{"name":"marginTop","type":"Number","desc":"\nThis property is deprecated, but left over so that it doesn't\nbreak exiting code. Please use `offset` instead. If both `offset` and\n`marginTop` are provided, `marginTop` will be ignored.\n","published":true,"default":14,"jsdoc":{"tags":[{"tag":"deprecated","type":null,"description":"since version 1.0.3"}]}},{"name":"offset","type":"Number","desc":"\nThe spacing between the top of the tooltip and the element it is\nanchored to.\n         ","published":true,"default":14},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"playAnimation","type":"Function","desc":"\nPlays an animation with an optional `type`.\n","params":[{"name":"type","type":"string=","desc":null},{"name":"cookie","type":"!Object=","desc":null}],"function":true},{"name":"position","type":"String","desc":"\nPositions the tooltip to the top, right, bottom, left of its content.\n         ","published":true,"default":"bottom"},{"name":"show","type":"Function","params":[],"function":true},{"name":"target","type":"Function","desc":"\nReturns the target element that this tooltip is anchored to. It is\neither the element given by the `for` attribute, or the immediate parent\nof the tooltip.\n       ","params":[],"function":true},{"name":"updatePosition","type":"Function","params":[],"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_animationMeta","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_cloneConfig","type":"Function","params":[{"name":"config"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_completeAnimations","type":"Function","params":[{"name":"allAnimations"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_configureAnimationEffects","type":"Function","params":[{"name":"allConfigs"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_copyProperties","type":"Function","params":[{"name":"config1"},{"name":"config2"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_entryAnimationChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_exitAnimationChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_forChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_getAnimationConfigRecursive","type":"Function","params":[{"name":"type"},{"name":"map"},{"name":"allConfigs"}],"private":true,"function":true},{"name":"_onAnimationFinish","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_player","type":"?Object","desc":"","published":true,"private":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_runAnimationEffects","type":"Function","params":[{"name":"allEffects"}],"private":true,"function":true},{"name":"_showing","type":"Boolean","published":true,"default":false,"private":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Polymer.NeonAnimationRunnerBehavior"],"observers":[],"is":"paper-tooltip","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-tooltip/paper-tooltip.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-tooltip"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-tooltip":{"type":"element","desc":"\nMaterial design: [Tooltips](https://www.google.com/design/spec/components/tooltips.html)\n\n`<paper-tooltip>` is a label that appears on hover and focus when the user\nhovers over an element with the cursor or with the keyboard. It will be centered\nto an anchor element specified in the `for` attribute, or, if that doesn't exist,\ncentered to the parent node containing it.\n\nExample:\n\n    <div style=\"display:inline-block\">\n      <button>Click me!</button>\n      <paper-tooltip>Tooltip text</paper-tooltip>\n    </div>\n\n    <div>\n      <button id=\"btn\">Click me!</button>\n      <paper-tooltip for=\"btn\">Tooltip text</paper-tooltip>\n    </div>\n\nThe tooltip can be positioned on the top|bottom|left|right of the anchor using\nthe `position` attribute. The default position is bottom.\n\n    <paper-tooltip for=\"btn\" position=\"left\">Tooltip text</paper-tooltip>\n    <paper-tooltip for=\"btn\" position=\"top\">Tooltip text</paper-tooltip>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tooltip-background` | The background color of the tooltip | `#616161`\n`--paper-tooltip-opacity` | The opacity of the tooltip | `0.9`\n`--paper-tooltip-text-color` | The text color of the tooltip | `white`\n`--paper-tooltip` | Mixin applied to the tooltip | `{}`\n\n","events":[],"properties":[{"name":"animationConfig","type":"Object","desc":"\nThe entry and exit animations that will be played when showing and\nhiding the tooltip. If you want to override this, you must ensure\nthat your animationConfig has the exact format below.\n         ","published":true,"default":"{\"entry\": [{\"name\": fade-in-animation, \"timing\": {\"delay\": 0}}], \"exit\": [{\"name\": fade-out-animation}]}"},{"name":"animationDelay","type":"Number","desc":"\nThe delay that will be applied before the `entry` animation is\nplayed when showing the tooltip.\n         ","published":true,"default":500},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"cancelAnimation","type":"Function","desc":"\nCancels the currently running animation.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"entryAnimation","type":"String","desc":"\nConvenience property for setting an 'entry' animation. Do not set `animationConfig.entry`\nmanually if using this. The animated node is set to `this` if using this property.\n       ","published":true,"observer":"_entryAnimationChanged","observerNode":{"type":"Literal","value":"_entryAnimationChanged","raw":"'_entryAnimationChanged'","range":[648,672],"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":42}}}},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"exitAnimation","type":"String","desc":"\nConvenience property for setting an 'exit' animation. Do not set `animationConfig.exit`\nmanually if using this. The animated node is set to `this` if using this property.\n       ","published":true,"observer":"_exitAnimationChanged","observerNode":{"type":"Literal","value":"_exitAnimationChanged","raw":"'_exitAnimationChanged'","range":[955,978],"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":41}}}},{"name":"fitToVisibleBounds","type":"Boolean","desc":"\nIf true, no parts of the tooltip will ever be shown offscreen.\n         ","published":true,"default":false},{"name":"for","type":"String","desc":"\nThe id of the element that the tooltip is anchored to. This element\nmust be a sibling of the tooltip.\n         ","published":true,"observer":"_forChanged","observerNode":{"type":"Literal","value":"_forChanged","raw":"'_forChanged'","range":[423,436],"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"getAnimationConfig","type":"Function","desc":"\nAn element implementing `Polymer.NeonAnimationRunnerBehavior` calls this method to configure\nan animation with an optional type. Elements implementing `Polymer.NeonAnimatableBehavior`\nshould define the property `animationConfig`, which is either a configuration object\nor a map of animation type to array of configuration objects.\n     ","params":[{"name":"type"}],"function":true},{"name":"hide","type":"Function","params":[],"function":true},{"name":"marginTop","type":"Number","desc":"\nThis property is deprecated, but left over so that it doesn't\nbreak exiting code. Please use `offset` instead. If both `offset` and\n`marginTop` are provided, `marginTop` will be ignored.\n","published":true,"default":14,"jsdoc":{"tags":[{"tag":"deprecated","type":null,"description":"since version 1.0.3"}]}},{"name":"offset","type":"Number","desc":"\nThe spacing between the top of the tooltip and the element it is\nanchored to.\n         ","published":true,"default":14},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"playAnimation","type":"Function","desc":"\nPlays an animation with an optional `type`.\n","params":[{"name":"type","type":"string=","desc":null},{"name":"cookie","type":"!Object=","desc":null}],"function":true},{"name":"position","type":"String","desc":"\nPositions the tooltip to the top, right, bottom, left of its content.\n         ","published":true,"default":"bottom"},{"name":"show","type":"Function","params":[],"function":true},{"name":"target","type":"Function","desc":"\nReturns the target element that this tooltip is anchored to. It is\neither the element given by the `for` attribute, or the immediate parent\nof the tooltip.\n       ","params":[],"function":true},{"name":"updatePosition","type":"Function","params":[],"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_animationMeta","type":"Object","published":true,"default":"UNKNOWN","private":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_cloneConfig","type":"Function","params":[{"name":"config"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_completeAnimations","type":"Function","params":[{"name":"allAnimations"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_configureAnimationEffects","type":"Function","params":[{"name":"allConfigs"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_copyProperties","type":"Function","params":[{"name":"config1"},{"name":"config2"}],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_entryAnimationChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_exitAnimationChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_forChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimatableBehavior","name":"_getAnimationConfigRecursive","type":"Function","params":[{"name":"type"},{"name":"map"},{"name":"allConfigs"}],"private":true,"function":true},{"name":"_onAnimationFinish","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_player","type":"?Object","desc":"","published":true,"private":true},{"__fromBehavior":"Polymer.NeonAnimationRunnerBehavior","name":"_runAnimationEffects","type":"Function","params":[{"name":"allEffects"}],"private":true,"function":true},{"name":"_showing","type":"Boolean","published":true,"default":false,"private":true},{"name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"name":"listeners","type":"Object","private":true,"configuration":true}],"behaviors":["Polymer.NeonAnimationRunnerBehavior"],"observers":[],"is":"paper-tooltip","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-tooltip/paper-tooltip.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-tooltip"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}