{"elements":[{"type":"element","desc":"\n`gold-cc-expiration-input` is a  single-line text field with Material Design styling\nfor entering a credit card's expiration date\n\n    <gold-cc-expiration-input></gold-cc-expiration-input>\n    <gold-cc-expiration-input value=\"11/15\"></gold-cc-expiration-input>\n\nIt may include an optional label, which by default is \"Expiration Date\".\n\n    <gold-cc-expiration-input label=\"Date\"></gold-cc-expiration-input>\n\n\n### Validation\n\nThe input can check whether the entered date is a valid, future date.\n\nThe input can be automatically validated as the user is typing by using\nthe `auto-validate` and `required` attributes. For manual validation, the\nelement also has a `validate()` method, which returns the validity of the\ninput as well sets any appropriate error messages and styles.\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.PaperInputBehavior","name":"allowedPattern","type":"String","desc":"\nSet this to specify the pattern allowed by `preventInvalidInput`. Bind this to the\n`<input is=\"iron-input\">`'s `allowedPattern` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"alwaysFloatLabel","type":"Boolean","desc":"\nSet to true to always float the label. Bind this to the `<paper-input-container>`'s\n`alwaysFloatLabel` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autoValidate","type":"Boolean","desc":"\nSet to true to auto-validate the input value. Bind this to the `<paper-input-container>`'s\n`autoValidate` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocapitalize","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.\n       ","published":true,"default":"none"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocomplete","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocomplete` property.\n       ","published":true,"default":"off"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocorrect","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocorrect` property.\n       ","published":true,"default":"off"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autofocus","type":"Boolean","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autofocus` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autosave","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autosave` property, used with type=search.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"charCounter","type":"Boolean","desc":"\nSet to true to show a character counter.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"disabled","type":"Boolean","desc":"\nSet to true to disable this input. Bind this to both the `<paper-input-container>`'s\nand the input's `disabled` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"errorMessage","type":"String","desc":"\nThe error message to display when the input is invalid. Bind this to the\n`<paper-input-error>`'s content, if using.\n       ","published":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"inputElement","type":"Function","desc":"\nReturns a reference to the input element.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"inputmode","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `inputmode` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"invalid","type":"Boolean","desc":"\nReturns true if the value is invalid. Bind this to both the `<paper-input-container>`'s\nand the input's `invalid` property.\n       ","published":true,"default":false,"notify":true},{"name":"label","type":"String","desc":"\nThe label for this input.\n       ","published":true,"default":"Expiration Date"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"list","type":"String","desc":"\nThe datalist of the input (if any). This should match the id of an existing <datalist>. Bind this\nto the `<input is=\"iron-input\">`'s `list` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"max","type":"String","desc":"\nThe maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-1-1\"`) or a Number (e.g. `2`).\nBind this to the `<input is=\"iron-input\">`'s `max` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"maxlength","type":"Number","desc":"\nThe maximum length of the input value. Bind this to the `<input is=\"iron-input\">`'s\n`maxlength` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"min","type":"String","desc":"\nThe minimum (numeric or date-time) input value.\nBind this to the `<input is=\"iron-input\">`'s `min` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"minlength","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `minlength` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"name","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `name` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"noLabelFloat","type":"Boolean","desc":"\nSet to true to disable the floating label. Bind this to the `<paper-input-container>`'s\n`noLabelFloat` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"pattern","type":"String","desc":"\nA pattern to validate the `input` with. Bind this to the `<input is=\"iron-input\">`'s\n`pattern` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"placeholder","type":"String","desc":"\nA placeholder string in addition to the label. If this is set, the label will always float.\n       ","published":true,"default":""},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"preventInvalidInput","type":"Boolean","desc":"\nSet to true to prevent the user from entering invalid input. Bind this to the\n`<input is=\"iron-input\">`'s `preventInvalidInput` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"readonly","type":"Boolean","desc":"\nBind this to the `<input is=\"iron-input\">`'s `readonly` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required. Bind this to the `<input is=\"iron-input\">`'s\n`required` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"results","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `results` property, , used with type=search.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"size","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `size` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"step","type":"String","desc":"\nLimits the numeric or date-time increments.\nBind this to the `<input is=\"iron-input\">`'s `step` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"type","type":"String","desc":"\nThe type of the input. The supported types are `text`, `number` and `password`. Bind this\nto the `<input is=\"iron-input\">`'s `type` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"updateValueAndPreserveCaret","type":"Function","desc":"\nRestores the cursor to its original position after updating the value.\n","params":[{"name":"newValue","type":"string","desc":"The value that should be saved."}],"function":true},{"name":"validate","type":"Function","desc":"\nOveridden from Polymer.PaperInputBehavior.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"validator","type":"String","desc":"\nName of the validator to use. Bind this to the `<input is=\"iron-input\">`'s `validator`\nproperty.\n       ","published":true},{"name":"value","type":"Object","published":true,"default":"","observer":"_onValueChanged","observerNode":{"type":"Literal","value":"_onValueChanged","raw":"'_onValueChanged'","range":[368,385],"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":35}}}},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_appendStringWithSpace","type":"Function","params":[{"name":"str"},{"name":"more"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_ariaDescribedBy","type":"String","published":true,"default":"","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_computeAlwaysFloatLabel","type":"Function","params":[{"name":"alwaysFloatLabel"},{"name":"placeholder"}],"private":true,"function":true},{"name":"_computeMonth","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"name":"_computeYear","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"name":"_dateChanged","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_focusedControlStateChanged","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_handleAutoValidate","type":"Function","desc":"\nIf `autoValidate` is true, then validates the element.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_onAddonAttached","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_onChange","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_onFocusedChanged","type":"Function","desc":"\nOveridden from Polymer.IronControlState.\n     ","params":[{"name":"focused"}],"private":true,"function":true},{"name":"_onValueChanged","type":"Function","desc":"\nA handler that is called on input\n     ","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"_parentForm","type":"Object","desc":"\nThe form that the element is registered to.\n       ","published":true,"private":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_updateAriaLabelledBy","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperInputBehavior","Polymer.IronFormElementBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_onFocusedChanged(focused)","raw":"'_onFocusedChanged(focused)'","range":[486,514],"loc":{"start":{"line":33,"column":6},"end":{"line":33,"column":34}}},"expression":"_onFocusedChanged(focused)"}],"is":"gold-cc-expiration-input","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/gold-cc-expiration-input.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Gold Elements"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"},{"type":"element","desc":"\n","events":[],"properties":[{"name":"ariaLabelPrefix","type":"String","published":true},{"name":"date","type":"Object","desc":"\nThe date object used by the validator. Has two properties, month and year.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"hasValidator","type":"Function","desc":"\n","params":[],"function":true,"return":{"type":"boolean","desc":"True if the validator `validator` exists."}},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"invalid","type":"Boolean","desc":"\nTrue if the last call to `validate` is invalid.\n       ","published":true,"notify":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"month","type":"String","desc":"\nThe month component of the date displayed.\n       ","published":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"observers","type":"Array"},{"name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required.\n       ","published":true,"default":false},{"name":"validate","type":"Function","params":[],"function":true},{"name":"validator","type":"String","published":true,"default":"date-validator"},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"validatorType","type":"String","desc":"\nNamespace for this validator.\n       ","published":true,"default":"validator"},{"name":"year","type":"String","desc":"\nThe year component of the date displayed.\n       ","published":true},{"name":"_computeAriaLabel","type":"Function","params":[{"name":"dateLabel"},{"name":"monthLabel"}],"private":true,"function":true},{"name":"_computeDate","type":"Function","params":[{"name":"month"},{"name":"year"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_getValidity","type":"Function","desc":"\nReturns true if `value` is valid.  By default, it is passed\nto the validator's `validate()` function, if a validator is set. You\nshould override this method if you want to implement custom validity\nlogic for your element.\n\n","params":[{"name":"value","type":"Object","desc":"The value to be validated."}],"private":true,"function":true,"return":{"type":"boolean","desc":"True if `value` is valid."}},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_invalidChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_validator","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_validatorMeta","type":"Object","published":true,"private":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronValidatableBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_computeDate(month,year)","raw":"'_computeDate(month,year)'","range":[835,861],"loc":{"start":{"line":53,"column":6},"end":{"line":53,"column":32}}},"expression":"_computeDate(month,year)"}],"is":"date-input","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/date-input.html","jsdoc":{"tags":[{"tag":"license","type":null,"description":"Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"}]},"demos":[]},{"type":"element","desc":"\n","events":[],"properties":[{"name":"validate","type":"Function","params":[{"name":"date"}],"function":true},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"validatorName","type":"String","desc":"\nName for this validator, used by `Polymer.IronValidatableBehavior` to lookup this element.\n       ","published":true,"default":"undefined.is"},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"validatorType","type":"String","desc":"\nNamespace for this validator.\n       ","published":true,"default":"validator"},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronValidatorBehavior"],"observers":[],"is":"date-validator","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/date-validator.html","jsdoc":{"tags":[{"tag":"license","type":null,"description":"Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"}]},"demos":[]}],"behaviors":[],"features":[],"elementsByTagName":{"gold-cc-expiration-input":{"type":"element","desc":"\n`gold-cc-expiration-input` is a  single-line text field with Material Design styling\nfor entering a credit card's expiration date\n\n    <gold-cc-expiration-input></gold-cc-expiration-input>\n    <gold-cc-expiration-input value=\"11/15\"></gold-cc-expiration-input>\n\nIt may include an optional label, which by default is \"Expiration Date\".\n\n    <gold-cc-expiration-input label=\"Date\"></gold-cc-expiration-input>\n\n\n### Validation\n\nThe input can check whether the entered date is a valid, future date.\n\nThe input can be automatically validated as the user is typing by using\nthe `auto-validate` and `required` attributes. For manual validation, the\nelement also has a `validate()` method, which returns the validity of the\ninput as well sets any appropriate error messages and styles.\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.PaperInputBehavior","name":"allowedPattern","type":"String","desc":"\nSet this to specify the pattern allowed by `preventInvalidInput`. Bind this to the\n`<input is=\"iron-input\">`'s `allowedPattern` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"alwaysFloatLabel","type":"Boolean","desc":"\nSet to true to always float the label. Bind this to the `<paper-input-container>`'s\n`alwaysFloatLabel` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autoValidate","type":"Boolean","desc":"\nSet to true to auto-validate the input value. Bind this to the `<paper-input-container>`'s\n`autoValidate` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocapitalize","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocapitalize` property.\n       ","published":true,"default":"none"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocomplete","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocomplete` property.\n       ","published":true,"default":"off"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autocorrect","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autocorrect` property.\n       ","published":true,"default":"off"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autofocus","type":"Boolean","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autofocus` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"autosave","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `autosave` property, used with type=search.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"charCounter","type":"Boolean","desc":"\nSet to true to show a character counter.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"disabled","type":"Boolean","desc":"\nSet to true to disable this input. Bind this to both the `<paper-input-container>`'s\nand the input's `disabled` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"errorMessage","type":"String","desc":"\nThe error message to display when the input is invalid. Bind this to the\n`<paper-input-error>`'s content, if using.\n       ","published":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"inputElement","type":"Function","desc":"\nReturns a reference to the input element.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"inputmode","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `inputmode` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"invalid","type":"Boolean","desc":"\nReturns true if the value is invalid. Bind this to both the `<paper-input-container>`'s\nand the input's `invalid` property.\n       ","published":true,"default":false,"notify":true},{"name":"label","type":"String","desc":"\nThe label for this input.\n       ","published":true,"default":"Expiration Date"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"list","type":"String","desc":"\nThe datalist of the input (if any). This should match the id of an existing <datalist>. Bind this\nto the `<input is=\"iron-input\">`'s `list` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"max","type":"String","desc":"\nThe maximum (numeric or date-time) input value.\nCan be a String (e.g. `\"2000-1-1\"`) or a Number (e.g. `2`).\nBind this to the `<input is=\"iron-input\">`'s `max` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"maxlength","type":"Number","desc":"\nThe maximum length of the input value. Bind this to the `<input is=\"iron-input\">`'s\n`maxlength` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"min","type":"String","desc":"\nThe minimum (numeric or date-time) input value.\nBind this to the `<input is=\"iron-input\">`'s `min` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"minlength","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `minlength` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"name","type":"String","desc":"\nBind this to the `<input is=\"iron-input\">`'s `name` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"noLabelFloat","type":"Boolean","desc":"\nSet to true to disable the floating label. Bind this to the `<paper-input-container>`'s\n`noLabelFloat` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"pattern","type":"String","desc":"\nA pattern to validate the `input` with. Bind this to the `<input is=\"iron-input\">`'s\n`pattern` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"placeholder","type":"String","desc":"\nA placeholder string in addition to the label. If this is set, the label will always float.\n       ","published":true,"default":""},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"preventInvalidInput","type":"Boolean","desc":"\nSet to true to prevent the user from entering invalid input. Bind this to the\n`<input is=\"iron-input\">`'s `preventInvalidInput` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"readonly","type":"Boolean","desc":"\nBind this to the `<input is=\"iron-input\">`'s `readonly` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required. Bind this to the `<input is=\"iron-input\">`'s\n`required` property.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"results","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `results` property, , used with type=search.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"size","type":"Number","desc":"\nBind this to the `<input is=\"iron-input\">`'s `size` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"step","type":"String","desc":"\nLimits the numeric or date-time increments.\nBind this to the `<input is=\"iron-input\">`'s `step` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"type","type":"String","desc":"\nThe type of the input. The supported types are `text`, `number` and `password`. Bind this\nto the `<input is=\"iron-input\">`'s `type` property.\n       ","published":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"updateValueAndPreserveCaret","type":"Function","desc":"\nRestores the cursor to its original position after updating the value.\n","params":[{"name":"newValue","type":"string","desc":"The value that should be saved."}],"function":true},{"name":"validate","type":"Function","desc":"\nOveridden from Polymer.PaperInputBehavior.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"validator","type":"String","desc":"\nName of the validator to use. Bind this to the `<input is=\"iron-input\">`'s `validator`\nproperty.\n       ","published":true},{"name":"value","type":"Object","published":true,"default":"","observer":"_onValueChanged","observerNode":{"type":"Literal","value":"_onValueChanged","raw":"'_onValueChanged'","range":[368,385],"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":35}}}},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_appendStringWithSpace","type":"Function","params":[{"name":"str"},{"name":"more"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_ariaDescribedBy","type":"String","published":true,"default":"","private":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_computeAlwaysFloatLabel","type":"Function","params":[{"name":"alwaysFloatLabel"},{"name":"placeholder"}],"private":true,"function":true},{"name":"_computeMonth","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"name":"_computeYear","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"name":"_dateChanged","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_focusedControlStateChanged","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_handleAutoValidate","type":"Function","desc":"\nIf `autoValidate` is true, then validates the element.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_onAddonAttached","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_onChange","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_onFocusedChanged","type":"Function","desc":"\nOveridden from Polymer.IronControlState.\n     ","params":[{"name":"focused"}],"private":true,"function":true},{"name":"_onValueChanged","type":"Function","desc":"\nA handler that is called on input\n     ","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"_parentForm","type":"Object","desc":"\nThe form that the element is registered to.\n       ","published":true,"private":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"_updateAriaLabelledBy","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInputBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperInputBehavior","Polymer.IronFormElementBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_onFocusedChanged(focused)","raw":"'_onFocusedChanged(focused)'","range":[486,514],"loc":{"start":{"line":33,"column":6},"end":{"line":33,"column":34}}},"expression":"_onFocusedChanged(focused)"}],"is":"gold-cc-expiration-input","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/gold-cc-expiration-input.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Gold Elements"},{"tag":"hero","type":null,"name":"hero.svg","description":null},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"},"date-input":{"type":"element","desc":"\n","events":[],"properties":[{"name":"ariaLabelPrefix","type":"String","published":true},{"name":"date","type":"Object","desc":"\nThe date object used by the validator. Has two properties, month and year.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"hasValidator","type":"Function","desc":"\n","params":[],"function":true,"return":{"type":"boolean","desc":"True if the validator `validator` exists."}},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"invalid","type":"Boolean","desc":"\nTrue if the last call to `validate` is invalid.\n       ","published":true,"notify":true,"reflectToAttribute":"UNKNOWN","default":false},{"name":"month","type":"String","desc":"\nThe month component of the date displayed.\n       ","published":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"observers","type":"Array"},{"name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required.\n       ","published":true,"default":false},{"name":"validate","type":"Function","params":[],"function":true},{"name":"validator","type":"String","published":true,"default":"date-validator"},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"validatorType","type":"String","desc":"\nNamespace for this validator.\n       ","published":true,"default":"validator"},{"name":"year","type":"String","desc":"\nThe year component of the date displayed.\n       ","published":true},{"name":"_computeAriaLabel","type":"Function","params":[{"name":"dateLabel"},{"name":"monthLabel"}],"private":true,"function":true},{"name":"_computeDate","type":"Function","params":[{"name":"month"},{"name":"year"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_getValidity","type":"Function","desc":"\nReturns true if `value` is valid.  By default, it is passed\nto the validator's `validate()` function, if a validator is set. You\nshould override this method if you want to implement custom validity\nlogic for your element.\n\n","params":[{"name":"value","type":"Object","desc":"The value to be validated."}],"private":true,"function":true,"return":{"type":"boolean","desc":"True if `value` is valid."}},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_invalidChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_validator","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"_validatorMeta","type":"Object","published":true,"private":true},{"__fromBehavior":"Polymer.IronValidatableBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronValidatableBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_computeDate(month,year)","raw":"'_computeDate(month,year)'","range":[835,861],"loc":{"start":{"line":53,"column":6},"end":{"line":53,"column":32}}},"expression":"_computeDate(month,year)"}],"is":"date-input","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/date-input.html","jsdoc":{"tags":[{"tag":"license","type":null,"description":"Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"}]},"demos":[]},"date-validator":{"type":"element","desc":"\n","events":[],"properties":[{"name":"validate","type":"Function","params":[{"name":"date"}],"function":true},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"validatorName","type":"String","desc":"\nName for this validator, used by `Polymer.IronValidatableBehavior` to lookup this element.\n       ","published":true,"default":"undefined.is"},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"validatorType","type":"String","desc":"\nNamespace for this validator.\n       ","published":true,"default":"validator"},{"__fromBehavior":"Polymer.IronValidatorBehavior","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronValidatorBehavior"],"observers":[],"is":"date-validator","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/gold-cc-expiration-input/date-validator.html","jsdoc":{"tags":[{"tag":"license","type":null,"description":"Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"}]},"demos":[]}}}