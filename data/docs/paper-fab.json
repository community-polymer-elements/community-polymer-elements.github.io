{"elements":[{"type":"element","desc":"\nMaterial design: [Floating Action Button](https://www.google.com/design/spec/components/buttons-floating-action-button.html)\n\n`paper-fab` is a floating action button. It contains an image placed in the center and\ncomes in two sizes: regular size and a smaller size by applying the attribute `mini`. When\nthe user touches the button, a ripple effect emanates from the center of the button.\n\nYou may import `iron-icons` to use with this element, or provide a URL to a custom icon.\nSee `iron-iconset` for more information about how to use a custom icon set.\n\nExample:\n\n    <link href=\"path/to/iron-icons/iron-icons.html\" rel=\"import\">\n\n    <paper-fab icon=\"add\"></paper-fab>\n    <paper-fab mini icon=\"favorite\"></paper-fab>\n    <paper-fab src=\"star.png\"></paper-fab>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-fab-background` | The background color of the button | `--accent-color`\n`--paper-fab-keyboard-focus-background` | The background color of the button when focused | `--paper-pink-900`\n`--paper-fab-disabled-background` | The background color of the button when it's disabled | `--paper-grey-300`\n`--paper-fab-disabled-text` | The text color of the button when it's disabled | `--paper-grey-500`\n`--paper-fab` | Mixin applied to the button | `{}`\n`--paper-fab-mini` | Mixin applied to a mini button | `{}`\n`--paper-fab-disabled` | Mixin applied to a disabled button | `{}`\n`--paper-fab-iron-icon` | Mixin applied to the iron-icon within the button | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"elevation","type":"Number","desc":"\nThe z-depth of this element, from 0-5. Setting to 0 will remove the\nshadow, and each increasing number greater than 0 will be \"deeper\"\nthan the last.\n\n","published":true,"reflectToAttribute":"UNKNOWN","readOnly":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"elevation"}]}},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"icon","type":"String","desc":"\nSpecifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"icon"}]}},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"name":"mini","type":"Boolean","desc":"\nSet this to true to style this is a \"mini\" FAB.\n\n","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"mini"}]}},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"src","type":"String","desc":"\nThe URL of an image for the icon. If the src property is specified,\nthe icon property should not be.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"src"}]}},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_calculateElevation","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_computeKeyboardClass","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_createRipple","type":"Function","desc":"\nCreate the element's ripple effect via creating a `<paper-ripple>`.\nOverride this method to customize the ripple element.\n","params":[],"private":true,"function":true,"return":{"type":"element","desc":"Returns a `<paper-ripple>` element."}},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_spaceKeyDownHandler","type":"Function","desc":"\nIn addition to `IronButtonState` behavior, when space key goes down, \ncreate a ripple down effect.\n     ","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_spaceKeyUpHandler","type":"Function","desc":"\nIn addition to `IronButtonState` behavior, when space key goes up, \ncreate a ripple up effect.\n     ","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperButtonBehavior"],"observers":[],"is":"paper-fab","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-fab/paper-fab.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-fab":{"type":"element","desc":"\nMaterial design: [Floating Action Button](https://www.google.com/design/spec/components/buttons-floating-action-button.html)\n\n`paper-fab` is a floating action button. It contains an image placed in the center and\ncomes in two sizes: regular size and a smaller size by applying the attribute `mini`. When\nthe user touches the button, a ripple effect emanates from the center of the button.\n\nYou may import `iron-icons` to use with this element, or provide a URL to a custom icon.\nSee `iron-iconset` for more information about how to use a custom icon set.\n\nExample:\n\n    <link href=\"path/to/iron-icons/iron-icons.html\" rel=\"import\">\n\n    <paper-fab icon=\"add\"></paper-fab>\n    <paper-fab mini icon=\"favorite\"></paper-fab>\n    <paper-fab src=\"star.png\"></paper-fab>\n\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-fab-background` | The background color of the button | `--accent-color`\n`--paper-fab-keyboard-focus-background` | The background color of the button when focused | `--paper-pink-900`\n`--paper-fab-disabled-background` | The background color of the button when it's disabled | `--paper-grey-300`\n`--paper-fab-disabled-text` | The text color of the button when it's disabled | `--paper-grey-500`\n`--paper-fab` | Mixin applied to the button | `{}`\n`--paper-fab-mini` | Mixin applied to a mini button | `{}`\n`--paper-fab-disabled` | Mixin applied to a disabled button | `{}`\n`--paper-fab-iron-icon` | Mixin applied to the iron-icon within the button | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"elevation","type":"Number","desc":"\nThe z-depth of this element, from 0-5. Setting to 0 will remove the\nshadow, and each increasing number greater than 0 will be \"deeper\"\nthan the last.\n\n","published":true,"reflectToAttribute":"UNKNOWN","readOnly":true,"jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"elevation"}]}},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"icon","type":"String","desc":"\nSpecifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"icon"}]}},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"name":"mini","type":"Boolean","desc":"\nSet this to true to style this is a \"mini\" FAB.\n\n","published":true,"default":false,"reflectToAttribute":"UNKNOWN","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"mini"}]}},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"src","type":"String","desc":"\nThe URL of an image for the icon. If the src property is specified,\nthe icon property should not be.\n\n","published":true,"default":"","jsdoc":{"tags":[{"tag":"attribute","type":null,"description":"src"}]}},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_calculateElevation","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_computeKeyboardClass","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_createRipple","type":"Function","desc":"\nCreate the element's ripple effect via creating a `<paper-ripple>`.\nOverride this method to customize the ripple element.\n","params":[],"private":true,"function":true,"return":{"type":"element","desc":"Returns a `<paper-ripple>` element."}},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_spaceKeyDownHandler","type":"Function","desc":"\nIn addition to `IronButtonState` behavior, when space key goes down, \ncreate a ripple down effect.\n     ","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"_spaceKeyUpHandler","type":"Function","desc":"\nIn addition to `IronButtonState` behavior, when space key goes up, \ncreate a ripple up effect.\n     ","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.PaperButtonBehavior","name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperButtonBehavior"],"observers":[],"is":"paper-fab","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-fab/paper-fab.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}