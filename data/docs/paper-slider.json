{"elements":[{"type":"element","desc":"\nMaterial design: [Sliders](https://www.google.com/design/spec/components/sliders.html)\n\n`paper-slider` allows user to select a value from a range of values by\nmoving the slider thumb.  The interactive nature of the slider makes it a\ngreat choice for settings that reflect intensity levels, such as volume,\nbrightness, or color saturation.\n\nExample:\n\n    <paper-slider></paper-slider>\n\nUse `min` and `max` to specify the slider range.  Default is 0 to 100.\n\nExample:\n\n    <paper-slider min=\"10\" max=\"200\" value=\"110\"></paper-slider>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-slider-bar-color` | The background color of the slider | `transparent`\n`--paper-slider-active-color` | The progress bar color | `--google-blue-700`\n`--paper-slider-secondary-color` | The secondary progress bar color | `--google-blue-300`\n`--paper-slider-knob-color` | The knob color | `--google-blue-700`\n`--paper-slider-disabled-knob-color` | The disabled knob color | `--google-grey-500`\n`--paper-slider-pin-color` | The pin color | `--google-blue-700`\n`--paper-slider-font-color` | The pin's text color | `#fff`\n`--paper-slider-disabled-active-color` | The disabled progress bar color | `--google-grey-500`\n`--paper-slider-disabled-secondary-color` | The disabled secondary progress bar color | `--google-grey-300`\n`--paper-slider-knob-start-color` | The fill color of the knob at the far left | `transparent`\n`--paper-slider-knob-start-border-color` | The border color of the knob at the far left | `#c8c8c8`\n`--paper-slider-pin-start-color` | The color of the pin at the far left | `#c8c8c8`\n`--paper-slider-height` | Height of the progress bar | `2px`\n\n","events":[{"desc":"\nFired when the slider's value changes due to user interaction.\n\nChanges to the slider's value due to changes in an underlying\nbound variable will not trigger this event.\n\n","jsdoc":{"description":"\nFired when the slider's value changes due to user interaction.\n\nChanges to the slider's value due to changes in an underlying\nbound variable will not trigger this event.\n\n","tags":[{"tag":"event","type":null,"description":"change"}],"orig":"*\n   * Fired when the slider's value changes due to user interaction.\n   *\n   * Changes to the slider's value due to changes in an underlying\n   * bound variable will not trigger this event.\n   *\n   * @event change\n   "},"name":"change","params":[]},{"desc":"\nFired when the slider's immediateValue changes.\n\n","jsdoc":{"description":"\nFired when the slider's immediateValue changes.\n\n","tags":[{"tag":"event","type":null,"description":"immediate-value-change"}],"orig":"*\n   * Fired when the slider's immediateValue changes.\n   *\n   * @event immediate-value-change\n   "},"name":"immediate-value-change","params":[]},{"desc":"\nFired when the slider's value changes.\n\n","jsdoc":{"description":"\nFired when the slider's value changes.\n\n","tags":[{"tag":"event","type":null,"description":"value-change"}],"orig":"*\n   * Fired when the slider's value changes.\n   *\n   * @event value-change\n   "},"name":"value-change","params":[]}],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"name":"decrement","type":"Function","desc":"\nDecreases value by `step` but not below `min`.\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"decrement","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"name":"dragging","type":"Boolean","desc":"\nTrue when the user is dragging the slider.\n       ","published":true,"default":false,"readOnly":true},{"name":"editable","type":"Boolean","desc":"\nIf true, an input is shown and user can use it to set the slider value.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"name":"expand","type":"Boolean","desc":"\nIf true, the knob is expanded\n       ","published":true,"default":false,"readOnly":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"immediateValue","type":"Number","desc":"\nThe immediate value of the slider.  This value is updated while the user\nis dragging the slider.\n       ","published":true,"default":0,"readOnly":true,"notify":true},{"name":"increment","type":"Function","desc":"\nIncreases value by `step` but not above `max`.\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"increment","description":null}]},"function":true},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"markers","type":"Array","published":true,"readOnly":true,"default":"[]"},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"max","type":"Number","desc":"\nThe number that indicates the maximum value of the range.\n     ","published":true,"default":100,"notify":true},{"name":"maxMarkers","type":"Number","desc":"\nThe maximum number of markers\n       ","published":true,"default":0,"notify":true,"observer":"_maxMarkersChanged","observerNode":{"type":"Literal","value":"_maxMarkersChanged","raw":"'_maxMarkersChanged'","range":[1533,1553],"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":38}}}},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"min","type":"Number","desc":"\nThe number that indicates the minimum value of the range.\n     ","published":true,"default":0,"notify":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"name","type":"String","desc":"\nThe name of this element.\n       ","published":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"observers","type":"Array"},{"name":"pin","type":"Boolean","desc":"\nIf true, a pin with numeric value label is shown when the slider thumb\nis pressed. Use for settings for which users need to know the exact\nvalue of the setting.\n       ","published":true,"default":false,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"ratio","type":"Number","desc":"\nReturns the ratio of the value.\n     ","published":true,"default":0,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recomended to provide a visual style for the element\nwhen it's value is invalid.\n       ","published":true,"default":false},{"name":"secondaryProgress","type":"Number","desc":"\nThe number that represents the current secondary progress.\n       ","published":true,"default":0,"notify":true,"observer":"_secondaryProgressChanged","observerNode":{"type":"Literal","value":"_secondaryProgressChanged","raw":"'_secondaryProgressChanged'","range":[909,936],"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":45}}}},{"name":"snaps","type":"Boolean","desc":"\nIf true, the slider thumb snaps to tick marks evenly spaced based\non the `step` property value.\n       ","published":true,"default":false,"notify":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"step","type":"Number","desc":"\nSpecifies the value granularity of the range's value.\n     ","published":true,"default":1,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"transiting","type":"Boolean","published":true,"default":false,"readOnly":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"value","type":"String","desc":"\nThe value for this element.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"name":"_bardown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"name":"_calcKnobPosition","type":"Function","params":[{"name":"ratio"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_calcRatio","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_calcStep","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"name":"_changeValue","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_clampValue","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_createRipple","type":"Function","desc":" create the element ripple inside the `sliderKnob`","params":[],"private":true,"function":true},{"name":"_decrementKey","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_expandKnob","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_focusedChanged","type":"Function","desc":" according to spec: https://www.google.com/design/spec/components/sliders.html","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"name":"_getClassNames","type":"Function","params":[],"private":true,"function":true},{"name":"_immediateValueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"name":"_incrementKey","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_inputKeyDown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_knobdown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_knobTransitionEnd","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_maxMarkersChanged","type":"Function","params":[{"name":"maxMarkers"}],"private":true,"function":true},{"name":"_mergeClasses","type":"Function","params":[{"name":"classes"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onTrack","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"_parentForm","type":"Object","desc":"\nThe form that the element is registered to.\n       ","published":true,"private":true},{"name":"_positionKnob","type":"Function","params":[{"name":"ratio"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_resetKnob","type":"Function","params":[],"private":true,"function":true},{"name":"_secondaryProgressChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"name":"_trackEnd","type":"Function","params":[],"private":true,"function":true},{"name":"_trackStart","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_trackX","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"name":"_updateKnob","type":"Function","params":[{"name":"value"},{"name":"min"},{"name":"max"},{"name":"snaps"},{"name":"step"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_validateValue","type":"Function","params":[],"private":true,"function":true},{"name":"_valueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronFormElementBehavior","Polymer.PaperInkyFocusBehavior","Polymer.IronRangeBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_updateKnob(value, min, max, snaps, step)","raw":"'_updateKnob(value, min, max, snaps, step)'","range":[2103,2146],"loc":{"start":{"line":106,"column":6},"end":{"line":106,"column":49}}},"expression":"_updateKnob(value, min, max, snaps, step)"},{"javascriptNode":{"type":"Literal","value":"_valueChanged(value)","raw":"'_valueChanged(value)'","range":[2154,2176],"loc":{"start":{"line":107,"column":6},"end":{"line":107,"column":28}}},"expression":"_valueChanged(value)"},{"javascriptNode":{"type":"Literal","value":"_immediateValueChanged(immediateValue)","raw":"'_immediateValueChanged(immediateValue)'","range":[2184,2224],"loc":{"start":{"line":108,"column":6},"end":{"line":108,"column":46}}},"expression":"_immediateValueChanged(immediateValue)"}],"is":"paper-slider","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-slider/paper-slider.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-slider"},{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}],"behaviors":[],"features":[],"elementsByTagName":{"paper-slider":{"type":"element","desc":"\nMaterial design: [Sliders](https://www.google.com/design/spec/components/sliders.html)\n\n`paper-slider` allows user to select a value from a range of values by\nmoving the slider thumb.  The interactive nature of the slider makes it a\ngreat choice for settings that reflect intensity levels, such as volume,\nbrightness, or color saturation.\n\nExample:\n\n    <paper-slider></paper-slider>\n\nUse `min` and `max` to specify the slider range.  Default is 0 to 100.\n\nExample:\n\n    <paper-slider min=\"10\" max=\"200\" value=\"110\"></paper-slider>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-slider-bar-color` | The background color of the slider | `transparent`\n`--paper-slider-active-color` | The progress bar color | `--google-blue-700`\n`--paper-slider-secondary-color` | The secondary progress bar color | `--google-blue-300`\n`--paper-slider-knob-color` | The knob color | `--google-blue-700`\n`--paper-slider-disabled-knob-color` | The disabled knob color | `--google-grey-500`\n`--paper-slider-pin-color` | The pin color | `--google-blue-700`\n`--paper-slider-font-color` | The pin's text color | `#fff`\n`--paper-slider-disabled-active-color` | The disabled progress bar color | `--google-grey-500`\n`--paper-slider-disabled-secondary-color` | The disabled secondary progress bar color | `--google-grey-300`\n`--paper-slider-knob-start-color` | The fill color of the knob at the far left | `transparent`\n`--paper-slider-knob-start-border-color` | The border color of the knob at the far left | `#c8c8c8`\n`--paper-slider-pin-start-color` | The color of the pin at the far left | `#c8c8c8`\n`--paper-slider-height` | Height of the progress bar | `2px`\n\n","events":[{"desc":"\nFired when the slider's value changes due to user interaction.\n\nChanges to the slider's value due to changes in an underlying\nbound variable will not trigger this event.\n\n","jsdoc":{"description":"\nFired when the slider's value changes due to user interaction.\n\nChanges to the slider's value due to changes in an underlying\nbound variable will not trigger this event.\n\n","tags":[{"tag":"event","type":null,"description":"change"}],"orig":"*\n   * Fired when the slider's value changes due to user interaction.\n   *\n   * Changes to the slider's value due to changes in an underlying\n   * bound variable will not trigger this event.\n   *\n   * @event change\n   "},"name":"change","params":[]},{"desc":"\nFired when the slider's immediateValue changes.\n\n","jsdoc":{"description":"\nFired when the slider's immediateValue changes.\n\n","tags":[{"tag":"event","type":null,"description":"immediate-value-change"}],"orig":"*\n   * Fired when the slider's immediateValue changes.\n   *\n   * @event immediate-value-change\n   "},"name":"immediate-value-change","params":[]},{"desc":"\nFired when the slider's value changes.\n\n","jsdoc":{"description":"\nFired when the slider's value changes.\n\n","tags":[{"tag":"event","type":null,"description":"value-change"}],"orig":"*\n   * Fired when the slider's value changes.\n   *\n   * @event value-change\n   "},"name":"value-change","params":[]}],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"name":"decrement","type":"Function","desc":"\nDecreases value by `step` but not below `min`.\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"decrement","description":null}]},"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"name":"dragging","type":"Boolean","desc":"\nTrue when the user is dragging the slider.\n       ","published":true,"default":false,"readOnly":true},{"name":"editable","type":"Boolean","desc":"\nIf true, an input is shown and user can use it to set the slider value.\n       ","published":true,"default":false},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"name":"expand","type":"Boolean","desc":"\nIf true, the knob is expanded\n       ","published":true,"default":false,"readOnly":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"immediateValue","type":"Number","desc":"\nThe immediate value of the slider.  This value is updated while the user\nis dragging the slider.\n       ","published":true,"default":0,"readOnly":true,"notify":true},{"name":"increment","type":"Function","desc":"\nIncreases value by `step` but not above `max`.\n","params":[],"jsdoc":{"tags":[{"tag":"method","type":null,"name":"increment","description":null}]},"function":true},{"name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"name":"markers","type":"Array","published":true,"readOnly":true,"default":"[]"},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"max","type":"Number","desc":"\nThe number that indicates the maximum value of the range.\n     ","published":true,"default":100,"notify":true},{"name":"maxMarkers","type":"Number","desc":"\nThe maximum number of markers\n       ","published":true,"default":0,"notify":true,"observer":"_maxMarkersChanged","observerNode":{"type":"Literal","value":"_maxMarkersChanged","raw":"'_maxMarkersChanged'","range":[1533,1553],"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":38}}}},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"min","type":"Number","desc":"\nThe number that indicates the minimum value of the range.\n     ","published":true,"default":0,"notify":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"name","type":"String","desc":"\nThe name of this element.\n       ","published":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"observers","type":"Array"},{"name":"pin","type":"Boolean","desc":"\nIf true, a pin with numeric value label is shown when the slider thumb\nis pressed. Use for settings for which users need to know the exact\nvalue of the setting.\n       ","published":true,"default":false,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"ratio","type":"Number","desc":"\nReturns the ratio of the value.\n     ","published":true,"default":0,"readOnly":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"required","type":"Boolean","desc":"\nSet to true to mark the input as required. If used in a form, a\ncustom element that uses this behavior should also use\nPolymer.IronValidatableBehavior and define a custom validation method.\nOtherwise, a `required` element will always be considered valid.\nIt's also strongly recomended to provide a visual style for the element\nwhen it's value is invalid.\n       ","published":true,"default":false},{"name":"secondaryProgress","type":"Number","desc":"\nThe number that represents the current secondary progress.\n       ","published":true,"default":0,"notify":true,"observer":"_secondaryProgressChanged","observerNode":{"type":"Literal","value":"_secondaryProgressChanged","raw":"'_secondaryProgressChanged'","range":[909,936],"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":45}}}},{"name":"snaps","type":"Boolean","desc":"\nIf true, the slider thumb snaps to tick marks evenly spaced based\non the `step` property value.\n       ","published":true,"default":false,"notify":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"step","type":"Number","desc":"\nSpecifies the value granularity of the range's value.\n     ","published":true,"default":1,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"name":"transiting","type":"Boolean","published":true,"default":false,"readOnly":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"value","type":"String","desc":"\nThe value for this element.\n       ","published":true,"notify":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"name":"_bardown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"name":"_calcKnobPosition","type":"Function","params":[{"name":"ratio"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_calcRatio","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_calcStep","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"name":"_changeValue","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_clampValue","type":"Function","params":[{"name":"value"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"name":"_createRipple","type":"Function","desc":" create the element ripple inside the `sliderKnob`","params":[],"private":true,"function":true},{"name":"_decrementKey","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_expandKnob","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_focusedChanged","type":"Function","desc":" according to spec: https://www.google.com/design/spec/components/sliders.html","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"name":"_getClassNames","type":"Function","params":[],"private":true,"function":true},{"name":"_immediateValueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"name":"_incrementKey","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_inputKeyDown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_knobdown","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_knobTransitionEnd","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_maxMarkersChanged","type":"Function","params":[{"name":"maxMarkers"}],"private":true,"function":true},{"name":"_mergeClasses","type":"Function","params":[{"name":"classes"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"name":"_onTrack","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"_parentForm","type":"Object","desc":"\nThe form that the element is registered to.\n       ","published":true,"private":true},{"name":"_positionKnob","type":"Function","params":[{"name":"ratio"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"name":"_resetKnob","type":"Function","params":[],"private":true,"function":true},{"name":"_secondaryProgressChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"name":"_trackEnd","type":"Function","params":[],"private":true,"function":true},{"name":"_trackStart","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"name":"_trackX","type":"Function","params":[{"name":"e"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_update","type":"Function","params":[],"private":true,"function":true},{"name":"_updateKnob","type":"Function","params":[{"name":"value"},{"name":"min"},{"name":"max"},{"name":"snaps"},{"name":"step"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronRangeBehavior","name":"_validateValue","type":"Function","params":[],"private":true,"function":true},{"name":"_valueChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronFormElementBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.IronFormElementBehavior","Polymer.PaperInkyFocusBehavior","Polymer.IronRangeBehavior"],"observers":[{"javascriptNode":{"type":"Literal","value":"_updateKnob(value, min, max, snaps, step)","raw":"'_updateKnob(value, min, max, snaps, step)'","range":[2103,2146],"loc":{"start":{"line":106,"column":6},"end":{"line":106,"column":49}}},"expression":"_updateKnob(value, min, max, snaps, step)"},{"javascriptNode":{"type":"Literal","value":"_valueChanged(value)","raw":"'_valueChanged(value)'","range":[2154,2176],"loc":{"start":{"line":107,"column":6},"end":{"line":107,"column":28}}},"expression":"_valueChanged(value)"},{"javascriptNode":{"type":"Literal","value":"_immediateValueChanged(immediateValue)","raw":"'_immediateValueChanged(immediateValue)'","range":[2184,2224],"loc":{"start":{"line":108,"column":6},"end":{"line":108,"column":46}}},"expression":"_immediateValueChanged(immediateValue)"}],"is":"paper-slider","contentHref":"/var/www/POLYMER/1/2/polymer-element-catalog/bower_components/paper-slider/paper-slider.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-slider"},{"tag":"demo","type":null,"name":"demo/index.html","description":""},{"tag":"hero","type":null,"name":"hero.svg","description":null}]},"demos":[{"desc":"demo","path":"demo/index.html"}],"hero":"hero.svg"}}}