{"elements":[{"type":"element","desc":"\nMaterial design: [Icon toggles](https://www.google.com/design/spec/components/buttons.html#buttons-toggle-buttons)\n\n`paper-icon-button` is a button with an image placed at the center. When the user touches\nthe button, a ripple effect emanates from the center of the button.\n\n`paper-icon-button` includes a default icon set.  Use `icon` to specify which icon\nfrom the icon set to use.\n\n    <paper-icon-button icon=\"menu\"></paper-icon-button>\n\nSee [`iron-iconset`](#iron-iconset) for more information about\nhow to use a custom icon set.\n\nExample:\n\n    <link href=\"path/to/iron-icons/iron-icons.html\" rel=\"import\">\n\n    <paper-icon-button icon=\"favorite\"></paper-icon-button>\n    <paper-icon-button src=\"star.png\"></paper-icon-button>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element. If you are using the icons\nprovided by `iron-icons`, they will inherit the foreground color of the button.\n\n    /* make a red \"favorite\" button */\n    <paper-icon-button icon=\"favorite\" style=\"color: red;\"></paper-icon-button>\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using the `--paper-icon-button-ink-color` custom property.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-icon-button-disabled-text` | The color of the disabled button | `--disabled-text-color`\n`--paper-icon-button-ink-color` | Selected/focus ripple color | `--primary-text-color`\n`--paper-icon-button` | Mixin for a button | `{}`\n`--paper-icon-button-disabled` | Mixin for a disabled button | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"alt","type":"String","desc":"\nSpecifies the alternate text for the button, for accessibility.\n         ","published":true,"observer":"_altChanged","observerNode":{"type":"Literal","value":"_altChanged","raw":"\"_altChanged\"","range":[832,845],"loc":{"start":{"line":37,"column":20},"end":{"line":37,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"icon","type":"String","desc":"\nSpecifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"src","type":"String","desc":"\nThe URL of an image for the icon. If the src property is specified,\nthe icon property should not be.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"name":"_altChanged","type":"Function","params":[{"name":"newValue"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_createRipple","type":"Function","desc":"\nCreate the element's ripple effect via creating a `<paper-ripple>`.\nOverride this method to customize the ripple element.\n","params":[],"private":true,"function":true,"return":{"type":"element","desc":"Returns a `<paper-ripple>` element."}},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInkyFocusBehaviorImpl","name":"_focusedChanged","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperInkyFocusBehavior"],"observers":[],"is":"paper-icon-button","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-icon-button/paper-icon-button.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-icon-button"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}],"behaviors":[],"features":[],"elementsByTagName":{"paper-icon-button":{"type":"element","desc":"\nMaterial design: [Icon toggles](https://www.google.com/design/spec/components/buttons.html#buttons-toggle-buttons)\n\n`paper-icon-button` is a button with an image placed at the center. When the user touches\nthe button, a ripple effect emanates from the center of the button.\n\n`paper-icon-button` includes a default icon set.  Use `icon` to specify which icon\nfrom the icon set to use.\n\n    <paper-icon-button icon=\"menu\"></paper-icon-button>\n\nSee [`iron-iconset`](#iron-iconset) for more information about\nhow to use a custom icon set.\n\nExample:\n\n    <link href=\"path/to/iron-icons/iron-icons.html\" rel=\"import\">\n\n    <paper-icon-button icon=\"favorite\"></paper-icon-button>\n    <paper-icon-button src=\"star.png\"></paper-icon-button>\n\n### Styling\n\nStyle the button with CSS as you would a normal DOM element. If you are using the icons\nprovided by `iron-icons`, they will inherit the foreground color of the button.\n\n    /* make a red \"favorite\" button */\n    <paper-icon-button icon=\"favorite\" style=\"color: red;\"></paper-icon-button>\n\nBy default, the ripple is the same color as the foreground at 25% opacity. You may\ncustomize the color using the `--paper-icon-button-ink-color` custom property.\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-icon-button-disabled-text` | The color of the disabled button | `--disabled-text-color`\n`--paper-icon-button-ink-color` | Selected/focus ripple color | `--primary-text-color`\n`--paper-icon-button` | Mixin for a button | `{}`\n`--paper-icon-button-disabled` | Mixin for a disabled button | `{}`\n\n","events":[],"properties":[{"__fromBehavior":"Polymer.IronButtonState","name":"active","type":"Boolean","desc":"\nIf true, the button is a toggle and is currently in the active state.\n       ","published":true,"default":false,"notify":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"addOwnKeyBinding","type":"Function","desc":"\nCan be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.\n       ","params":[{"name":"eventString"},{"name":"handlerName"}],"function":true},{"name":"alt","type":"String","desc":"\nSpecifies the alternate text for the button, for accessibility.\n         ","published":true,"observer":"_altChanged","observerNode":{"type":"Literal","value":"_altChanged","raw":"\"_altChanged\"","range":[832,845],"loc":{"start":{"line":37,"column":20},"end":{"line":37,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"ariaActiveAttribute","type":"String","desc":"\nThe aria attribute to be set if the button is a toggle and in the\nactive state.\n       ","published":true,"default":"aria-pressed","observer":"_ariaActiveAttributeChanged","observerNode":{"type":"Literal","value":"_ariaActiveAttributeChanged","raw":"'_ariaActiveAttributeChanged'","range":[1577,1606],"loc":{"start":{"line":69,"column":18},"end":{"line":69,"column":47}}}},{"__fromBehavior":"Polymer.IronControlState","name":"disabled","type":"Boolean","desc":"\nIf true, the user cannot interact with this element.\n       ","published":true,"default":false,"notify":true,"observer":"_disabledChanged","observerNode":{"type":"Literal","value":"_disabledChanged","raw":"'_disabledChanged'","range":[521,539],"loc":{"start":{"line":29,"column":18},"end":{"line":29,"column":36}}},"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"ensureRipple","type":"Function","desc":"\nEnsures this element contains a ripple effect. For startup efficiency \nthe ripple effect is dynamically on demand when needed.\n","params":[{"name":"triggeringEvent","type":"event","desc":"(optional) event that triggered the \nripple."}],"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"focused","type":"Boolean","desc":"\nIf true, the element currently has focus.\n       ","published":true,"default":false,"notify":true,"readOnly":true,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"getRipple","type":"Function","desc":"\nReturns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the \nripple to be created.\n     ","params":[],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"hasRipple","type":"Function","desc":"\nReturns true if this element currently contains a ripple effect.\n","params":[],"function":true,"return":{"type":"boolean","desc":null}},{"name":"icon","type":"String","desc":"\nSpecifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"keyBindings","type":"Object"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyEventTarget","type":"Object","desc":"\nThe HTMLElement that will be firing relevant KeyboardEvents.\n         ","published":true,"default":"UNKNOWN"},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"keyboardEventMatchesKeys","type":"Function","params":[{"name":"event"},{"name":"eventString"}],"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"noink","type":"Boolean","desc":"\nIf true, the element will not produce a ripple effect when interacted\nwith via the pointer.\n       ","published":true,"observer":"_noinkChanged","observerNode":{"type":"Literal","value":"_noinkChanged","raw":"'_noinkChanged'","range":[581,596],"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"observers","type":"Array"},{"__fromBehavior":"Polymer.IronButtonState","name":"pointerDown","type":"Boolean","desc":"\nTrue if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).\n       ","published":true,"readOnly":true,"default":false},{"__fromBehavior":"Polymer.IronButtonState","name":"pressed","type":"Boolean","desc":"\nIf true, the user is currently holding down the button.\n       ","published":true,"readOnly":true,"default":false,"reflectToAttribute":"UNKNOWN","observer":"_pressedChanged","observerNode":{"type":"Literal","value":"_pressedChanged","raw":"'_pressedChanged'","range":[364,381],"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":35}}}},{"__fromBehavior":"Polymer.IronButtonState","name":"receivedFocusFromKeyboard","type":"Boolean","desc":"\nTrue if the input device that caused the element to receive focus\nwas a keyboard.\n       ","published":true,"readOnly":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"removeOwnKeyBindings","type":"Function","desc":"\nWhen called, will remove all imperatively-added key bindings.\n       ","params":[],"function":true},{"name":"src","type":"String","desc":"\nThe URL of an image for the icon. If the src property is specified,\nthe icon property should not be.\n         ","published":true},{"__fromBehavior":"Polymer.IronButtonState","name":"toggles","type":"Boolean","desc":"\nIf true, the button toggles the active state with each tap or press\nof the spacebar.\n       ","published":true,"default":false,"reflectToAttribute":"UNKNOWN"},{"__fromBehavior":"Polymer.IronButtonState","name":"_activeChanged","type":"Function","params":[{"name":"active"},{"name":"ariaActiveAttribute"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_addKeyBinding","type":"Function","params":[{"name":"eventString"},{"name":"handlerName"}],"private":true,"function":true},{"name":"_altChanged","type":"Function","params":[{"name":"newValue"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_ariaActiveAttributeChanged","type":"Function","params":[{"name":"value"},{"name":"oldValue"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_asyncClick","type":"Function","desc":" event handler to unwind before triggering another event","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_boundFocusBlurHandler","type":"Function","published":true,"default":"UNKNOWN","private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_boundKeyHandlers","type":"Array","published":true,"default":"[]","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_buttonStateChanged","type":"Function","desc":"\nEnsures a `<paper-ripple>` element is available when the element is \nfocused.\n     ","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_changedButtonState","type":"Function","desc":" provide hook for follow-on behaviors to react to button-state","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_changedControlState","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_collectKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_controlStateChanged","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_createRipple","type":"Function","desc":"\nCreate the element's ripple effect via creating a `<paper-ripple>`.\nOverride this method to customize the ripple element.\n","params":[],"private":true,"function":true,"return":{"type":"element","desc":"Returns a `<paper-ripple>` element."}},{"__fromBehavior":"Polymer.IronButtonState","name":"_detectKeyboardFocus","type":"Function","params":[{"name":"focused"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_disabledChanged","type":"Function","params":[{"name":"disabled"},{"name":"old"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_downHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_focusBlurHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.PaperInkyFocusBehaviorImpl","name":"_focusedChanged","type":"Function","params":[{"name":"receivedFocusFromKeyboard"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_imperativeKeyBindings","type":"Object","desc":" own properties of everything on the \"prototype\".","published":true,"default":"{}","private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_listenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_mouseEventRe","type":"object","private":true},{"__fromBehavior":"Polymer.PaperRippleBehavior","name":"_noinkChanged","type":"Function","params":[{"name":"noink"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronControlState","name":"_oldTabIndex","type":"Number","published":true,"private":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_onKeyBindingEvent","type":"Function","params":[{"name":"keyBindings"},{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_prepKeyBindings","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_pressedChanged","type":"Function","desc":" any of these changes are considered a change to button state","params":[{"name":"pressed"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_resetKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyDownHandler","type":"Function","params":[{"name":"event"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_spaceKeyUpHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_tapHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_triggerKeyHandler","type":"Function","params":[{"name":"keyCombo"},{"name":"handlerName"},{"name":"keyboardEvent"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"_unlistenKeyEventListeners","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_upHandler","type":"Function","params":[],"private":true,"function":true},{"__fromBehavior":"Polymer.IronButtonState","name":"_userActivate","type":"Function","desc":" 'change' events","params":[{"name":"active"}],"private":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"attached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"detached","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"name":"hostAttributes","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronButtonState","name":"listeners","type":"Object","private":true,"configuration":true},{"__fromBehavior":"Polymer.IronControlState","name":"ready","type":"Function","params":[],"private":true,"configuration":true,"function":true},{"__fromBehavior":"Polymer.IronA11yKeysBehavior","name":"registered","type":"Function","params":[],"private":true,"configuration":true,"function":true}],"behaviors":["Polymer.PaperInkyFocusBehavior"],"observers":[],"is":"paper-icon-button","contentHref":"/var/www/community-polymer-elements.github.io/private/polymer-element-catalog/bower_components/paper-icon-button/paper-icon-button.html","jsdoc":{"tags":[{"tag":"group","type":null,"description":"Paper Elements"},{"tag":"element","type":null,"description":"paper-icon-button"},{"tag":"demo","type":null,"name":"demo/index.html","description":""}]},"demos":[{"desc":"demo","path":"demo/index.html"}]}}}